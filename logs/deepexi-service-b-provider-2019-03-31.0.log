2019-03-31 15:14:40.271 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c3f692dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:14:41.303 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 15:14:41.308 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 15:14:41.361 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 15:14:41.365 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 15:14:50.198 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:14:54.261 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:14:58.306 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:15:02.266 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:15:02.268 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 15:15:06.266 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:16:01.205 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$24b4fe76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:16:02.089 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 15:16:02.094 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 15:16:02.142 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 15:16:02.147 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 15:16:10.851 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:16:14.862 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:16:18.868 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 15:17:59.886 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c57c2ca5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:18:00.912 INFO  [main] com.deepexi.b.StartupApplication: - The following profiles are active: prod
2019-03-31 15:18:03.037 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=128eef0a-6c4e-3d0e-a40e-4033abdf6185
2019-03-31 15:18:03.212 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a96229a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:18:03.424 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:18:03.439 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$66ccf5cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:18:03.466 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c57c2ca5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:18:04.546 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8088 (http)
2019-03-31 15:18:04.598 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 15:18:04.601 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 15:18:04.620 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 15:18:04.854 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 15:18:04.854 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3866 ms
2019-03-31 15:18:04.882 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 15:18:05.025 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 15:18:05.026 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 15:18:05.026 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 15:18:05.033 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 15:18:05.034 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 15:18:05.035 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 15:18:06.622 INFO  [main] com.zaxxer.hikari.HikariDataSource: - HikariPool-1 - Starting...
2019-03-31 15:18:07.802 ERROR [main] com.zaxxer.hikari.pool.HikariPool: - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:695)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:663)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:653)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:638)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:606)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:624)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:620)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:68)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:1683)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:656)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:349)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:221)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.buildSqlSessionFactory(MybatisSqlSessionFactoryBean.java:611)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:398)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:690)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:165)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e72a9642.CGLIB$sqlSessionFactory$0(<generated>)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e72a9642$$FastClassBySpringCGLIB$$d6b6b80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e72a9642.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:620)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:605)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1239)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1362)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1239)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1166)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1239)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1166)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.deepexi.b.StartupApplication.main(StartupApplication.java:19)
Caused by: com.mysql.cj.core.exceptions.InvalidConnectionAttributeException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.core.exceptions.ExceptionFactory.createException(ExceptionFactory.java:54)
	at com.mysql.cj.core.exceptions.ExceptionFactory.createException(ExceptionFactory.java:73)
	at com.mysql.cj.jdbc.util.TimeUtil.getCanonicalTimezone(TimeUtil.java:118)
	at com.mysql.cj.mysqla.MysqlaSession.configureTimezone(MysqlaSession.java:308)
	at com.mysql.cj.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:2474)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:1817)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:1673)
	... 81 common frames omitted
2019-03-31 15:18:07.814 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productController': Unsatisfied dependency expressed through field 'productService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productServiceImpl': Unsatisfied dependency expressed through field 'productMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productMapper' defined in file [C:\Users\YL\springcloud-exam\deepexi-service-b\deepexi-service-b-provider\target\classes\com\deepexi\b\mapper\ProductMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
2019-03-31 15:18:07.821 INFO  [main] o.a.catalina.core.StandardService: - Stopping service [Tomcat]
2019-03-31 15:18:07.854 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 15:18:07.912 ERROR [main] o.s.boot.SpringApplication: - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productController': Unsatisfied dependency expressed through field 'productService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productServiceImpl': Unsatisfied dependency expressed through field 'productMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productMapper' defined in file [C:\Users\YL\springcloud-exam\deepexi-service-b\deepexi-service-b-provider\target\classes\com\deepexi\b\mapper\ProductMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.deepexi.b.StartupApplication.main(StartupApplication.java:19)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productServiceImpl': Unsatisfied dependency expressed through field 'productMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productMapper' defined in file [C:\Users\YL\springcloud-exam\deepexi-service-b\deepexi-service-b-provider\target\classes\com\deepexi\b\mapper\ProductMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1239)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1166)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productMapper' defined in file [C:\Users\YL\springcloud-exam\deepexi-service-b\deepexi-service-b-provider\target\classes\com\deepexi\b\mapper\ProductMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1362)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1239)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1166)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:605)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1239)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1467)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:620)
	... 56 common frames omitted
Caused by: com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail !  Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.
	at com.baomidou.mybatisplus.core.toolkit.ExceptionUtils.mpe(ExceptionUtils.java:51)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.buildSqlSessionFactory(MybatisSqlSessionFactoryBean.java:614)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:398)
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:690)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:165)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e72a9642.CGLIB$sqlSessionFactory$0(<generated>)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e72a9642$$FastClassBySpringCGLIB$$d6b6b80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e72a9642.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 57 common frames omitted
2019-03-31 15:19:30.417 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$81b45bac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:19:31.246 INFO  [main] com.deepexi.b.StartupApplication: - The following profiles are active: prod
2019-03-31 15:19:32.598 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=128eef0a-6c4e-3d0e-a40e-4033abdf6185
2019-03-31 15:19:32.726 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$659a58af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:19:32.893 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:19:32.906 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$230524d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:19:32.932 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$81b45bac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 15:19:33.740 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8088 (http)
2019-03-31 15:19:33.772 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 15:19:33.777 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 15:19:33.788 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 15:19:34.012 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 15:19:34.013 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2743 ms
2019-03-31 15:19:34.051 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 15:19:34.183 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 15:19:34.183 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 15:19:34.183 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 15:19:34.186 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 15:19:34.186 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 15:19:34.187 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 15:19:35.608 INFO  [main] com.zaxxer.hikari.HikariDataSource: - HikariPool-1 - Starting...
2019-03-31 15:19:35.752 INFO  [main] com.zaxxer.hikari.HikariDataSource: - HikariPool-1 - Start completed.
2019-03-31 15:19:37.071 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 15:19:37.143 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 15:19:37.145 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 15:19:37.159 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 15:19:37.159 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 15:19:37.684 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 15:19:40.162 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 15:19:40.259 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 15:19:40.700 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 15:19:40.700 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 15:19:40.991 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 15:19:40.994 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 15:19:41.478 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 15:19:41.941 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 15:19:41.944 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 15:19:41.948 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 15:19:41.949 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 15:19:41.952 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 15:19:41.952 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 15:19:41.955 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 15:19:44.111 ERROR [main] c.n.d.s.t.d.RedirectingEurekaHttpClient: - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$891d54cb.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$891d54cb$$FastClassBySpringCGLIB$$6459e894.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$891d54cb.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:620)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:605)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:356)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.deepexi.b.StartupApplication.main(StartupApplication.java:19)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 69 common frames omitted
2019-03-31 15:19:44.117 WARN  [main] c.n.d.s.t.d.RetryableEurekaHttpClient: - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2019-03-31 15:19:44.118 ERROR [main] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8088 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$891d54cb.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$891d54cb$$FastClassBySpringCGLIB$$6459e894.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$891d54cb.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:620)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:605)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:356)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:879)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.deepexi.b.StartupApplication.main(StartupApplication.java:19)
2019-03-31 15:19:44.125 WARN  [main] c.netflix.discovery.DiscoveryClient: - Using default backup registry implementation which does not do anything.
2019-03-31 15:19:44.127 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 15:19:44.130 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 15:19:44.169 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554016784133 with initial instances count: 0
2019-03-31 15:19:44.180 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 15:19:44.181 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554016784181, current=UP, previous=STARTING]
2019-03-31 15:19:44.184 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8088: registering service...
2019-03-31 15:19:44.209 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 15:19:44.242 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 15:19:44.389 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 15:19:44.740 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8088 (http) with context path '/deepexi-service-b'
2019-03-31 15:19:44.744 INFO  [main] com.deepexi.b.StartupApplication: - Started StartupApplication in 15.991 seconds (JVM running for 19.063)
2019-03-31 15:19:46.216 ERROR [nfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient: - Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2019-03-31 15:19:46.221 WARN  [nfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient: - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2019-03-31 15:19:46.224 WARN  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8088 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-03-31 15:19:46.224 WARN  [nfoReplicator-0] c.n.discovery.InstanceInfoReplicator: - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2019-03-31 17:03:59.002 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50b583d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:03:59.997 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:04:00.002 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:04:00.074 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:04:00.079 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:04:08.868 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: Connection refused: connect]]
2019-03-31 17:04:12.877 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:04:16.883 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:04:20.882 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:04:20.883 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:04:24.885 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:04:28.889 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:04:28.890 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:04:28.893 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:04:28.894 INFO  [main] com.deepexi.b.StartupApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:04:29.766 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b.mapper]' package. Please check your configuration.
2019-03-31 17:04:29.983 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:04:30.001 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:04:30.261 INFO  [main] o.s.c.a.ConfigurationClassPostProcessor: - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2019-03-31 17:04:30.395 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=d7689691-8854-32e2-80ae-8178f742aac8
2019-03-31 17:04:30.423 WARN  [main] o.s.b.c.p.PropertySourcesDeducer: - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
2019-03-31 17:04:30.555 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e8f15540] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:04:30.710 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:04:30.725 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$a65c2163] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:04:30.751 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50b583d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:04:31.448 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 17:04:31.469 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 17:04:31.471 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 17:04:31.482 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 17:04:31.668 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 17:04:31.668 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2753 ms
2019-03-31 17:04:31.693 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 17:04:31.838 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 17:04:31.840 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 17:04:31.840 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 17:04:31.840 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 17:04:31.840 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 17:04:31.843 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 17:04:31.905 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driverClassName' in value "${spring.datasource.driverClassName}"
2019-03-31 17:04:31.908 INFO  [main] o.a.catalina.core.StandardService: - Stopping service [Tomcat]
2019-03-31 17:04:31.918 WARN  [main] o.a.c.loader.WebappClassLoaderBase: - The web application [deepexi-service-b] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43)
2019-03-31 17:04:31.934 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:04:31.949 ERROR [main] o.s.boot.SpringApplication: - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driverClassName' in value "${spring.datasource.driverClassName}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:575)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:846)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:863)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.deepexi.b.StartupApplication.main(StartupApplication.java:19)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.datasource.driverClassName' in value "${spring.datasource.driverClassName}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:172)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:842)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1166)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	... 17 common frames omitted
2019-03-31 17:05:19.061 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6cada3c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:05:19.934 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:05:19.938 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:05:19.989 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:05:19.993 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:05:28.665 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:05:32.673 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:05:36.679 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:05:40.680 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:05:40.683 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:05:44.683 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:05:48.685 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:05:48.686 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:05:48.689 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:05:48.690 INFO  [main] com.deepexi.b.StartupApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:05:49.785 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:05:49.804 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:05:50.072 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:05:50.082 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:05:50.087 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:07:11.761 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$20c76c78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:07:12.871 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:07:12.876 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:07:12.930 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:07:12.935 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:07:21.641 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:07:25.651 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:07:29.657 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:07:33.656 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:07:33.657 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:07:37.659 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:07:41.661 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:07:41.662 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:07:41.665 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:07:41.666 INFO  [main] com.deepexi.b.StartupApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:07:43.059 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:07:43.078 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:07:43.337 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:07:43.347 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:07:43.352 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:15:13.035 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$43ae5bd5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:15:13.917 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:15:13.921 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:15:13.961 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:15:13.964 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:15:22.629 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:15:26.638 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:15:30.643 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:15:34.641 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:15:34.642 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:15:38.643 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:15:42.654 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: Connection refused: connect]]
2019-03-31 17:15:42.655 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:15:42.658 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:15:42.659 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:15:43.613 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:15:43.633 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:15:43.874 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:15:43.885 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:15:43.890 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:20:24.711 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8434ee08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:20:25.593 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:20:25.598 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:20:25.639 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:20:25.643 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:20:34.349 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:20:38.364 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:20:42.370 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:20:46.370 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:20:46.372 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:20:50.372 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:20:54.376 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:20:54.377 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:20:54.381 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:20:54.382 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:20:56.622 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:20:56.650 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:20:57.326 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:20:57.361 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:20:57.431 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:23:47.117 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8fd13f9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:23:47.977 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:23:47.981 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:23:48.026 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:23:48.030 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:23:56.741 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:24:00.749 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:24:04.755 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:24:08.754 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:24:08.757 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:24:12.767 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:24:16.772 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:24:16.773 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:24:16.776 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:24:16.776 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:24:17.771 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:24:17.790 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:24:18.041 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:24:18.051 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:24:18.056 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:25:08.293 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8b9ecb9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:25:09.230 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:25:09.235 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:25:09.278 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:25:09.281 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:25:17.965 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:25:21.975 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:25:25.980 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:25:29.979 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:25:29.981 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:25:33.982 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:25:37.984 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:25:37.985 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:25:37.989 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:25:37.990 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:25:39.145 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:25:39.174 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:25:39.501 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:25:39.514 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:25:39.522 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:26:38.998 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3366cd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:26:39.842 INFO  [main] c.c.f.f.i.p.DefaultApplicationProvider: - App ID is set to deepexi-service-b-provider by app.id property from System Property
2019-03-31 17:26:39.846 INFO  [main] c.c.f.f.i.p.DefaultServerProvider: - Environment is set to null. Because it is not available in either (1) JVM system property 'env', (2) OS env variable 'ENV' nor (3) property 'env' from the properties InputStream.
2019-03-31 17:26:39.887 INFO  [main] c.c.f.a.i.DefaultMetaServerProvider: - Located meta services from apollo.meta configuration: http://localhost:8080!
2019-03-31 17:26:39.890 INFO  [main] c.c.f.apollo.core.MetaDomainConsts: - Located meta server address http://localhost:8080 for env UNKNOWN from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2019-03-31 17:26:48.554 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:26:52.564 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:26:56.580 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 1 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:27:00.580 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:27:00.581 WARN  [main] c.c.f.a.i.AbstractConfigRepository: - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties]
2019-03-31 17:27:04.582 WARN  [ngPollService-1] c.c.f.a.i.RemoteConfigLongPollService: - Long polling failed, will retry in 2 seconds. appId: deepexi-service-b-provider, cluster: default, namespaces: application, long polling url: null, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:27:08.584 WARN  [main] c.c.f.a.i.LocalFileConfigRepository: - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Get config services failed from http://localhost:8080/services/config?appId=deepexi-service-b-provider&ip=192.168.0.112 [Cause: Could not complete get operation [Cause: connect timed out]]
2019-03-31 17:27:08.585 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Init Apollo Local Config failed - namespace: application, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\deepexi-service-b-provider\config-cache\deepexi-service-b-provider+default+application.properties].
2019-03-31 17:27:08.588 WARN  [main] c.c.f.apollo.internals.DefaultConfig: - Could not load config for namespace application from Apollo, please check whether the configs are released in Apollo! Return default value now!
2019-03-31 17:27:08.589 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:27:09.572 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:27:09.827 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:27:09.837 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:27:09.843 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:31:29.885 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$62d9730d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:31:30.712 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:31:31.696 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 17:31:31.968 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 17:31:31.978 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 17:31:31.986 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 17:36:10.613 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1d2130d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:36:11.404 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:36:12.648 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 17:36:12.921 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:36:12.930 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$be71f9f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:36:12.962 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1d2130d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:36:13.685 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 17:36:13.709 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 17:36:13.710 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 17:36:13.722 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 17:36:13.904 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 17:36:13.904 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2479 ms
2019-03-31 17:36:13.931 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 17:36:14.071 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 17:36:14.071 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 17:36:14.071 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 17:36:14.071 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 17:36:14.074 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 17:36:14.075 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 17:36:15.172 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 17:36:15.232 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:36:15.235 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:36:15.240 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:36:15.243 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:36:15.624 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 17:36:17.679 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 17:36:17.718 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 17:36:17.884 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 17:36:17.885 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 17:36:18.017 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 17:36:18.017 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 17:36:18.285 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 17:36:18.708 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 17:36:18.709 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 17:36:18.710 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 17:36:18.712 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 17:36:18.713 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 17:36:18.715 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 17:36:18.716 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 17:36:18.972 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 17:36:18.974 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 17:36:18.980 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 17:36:18.984 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554024978983 with initial instances count: 0
2019-03-31 17:36:18.996 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 17:36:18.997 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554024978997, current=UP, previous=STARTING]
2019-03-31 17:36:19.000 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 17:36:19.006 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 17:36:19.022 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 17:36:19.124 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 17:36:19.124 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 17:36:19.353 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 17:36:19.357 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.688 seconds (JVM running for 13.642)
2019-03-31 17:36:48.974 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 17:36:48.975 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 17:36:48.976 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 17:36:48.979 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 17:36:48.979 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 17:36:48.982 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 17:36:48.982 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 17:36:49.032 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 17:41:25.018 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8ccca102] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:41:25.894 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:41:29.462 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 17:41:30.792 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:41:30.828 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$2e1d6a28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:41:30.912 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8ccca102] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:41:32.537 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 17:41:32.585 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 17:41:32.586 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 17:41:32.610 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 17:41:33.073 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 17:41:33.074 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 7151 ms
2019-03-31 17:41:33.125 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 17:41:33.562 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 17:41:33.563 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 17:41:33.564 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 17:41:33.564 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 17:41:33.600 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 17:41:33.600 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 17:41:37.378 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 17:41:37.479 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:41:37.482 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:41:37.496 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:41:37.499 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:41:38.271 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 17:41:41.200 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 17:41:41.277 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 17:41:41.524 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 17:41:41.525 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 17:41:41.810 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 17:41:41.811 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 17:41:42.099 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 17:41:42.525 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 17:41:42.526 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 17:41:42.526 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 17:41:42.528 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 17:41:42.529 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 17:41:42.531 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 17:41:42.532 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 17:41:42.859 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 17:41:42.863 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 17:41:42.868 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 17:41:42.872 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554025302871 with initial instances count: 2
2019-03-31 17:41:42.880 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 17:41:42.881 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554025302881, current=UP, previous=STARTING]
2019-03-31 17:41:42.884 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 17:41:42.894 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 17:41:42.905 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 17:41:42.934 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 17:41:42.971 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 17:41:43.268 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 17:41:43.273 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 20.095 seconds (JVM running for 23.325)
2019-03-31 17:42:58.172 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$624dad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:42:58.977 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:43:00.192 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 17:43:00.494 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:43:00.503 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$39e7659] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:43:00.534 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$624dad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:43:01.263 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 17:43:01.290 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 17:43:01.291 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 17:43:01.304 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 17:43:01.486 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 17:43:01.487 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2490 ms
2019-03-31 17:43:01.514 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 17:43:01.659 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 17:43:01.660 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 17:43:01.660 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 17:43:01.660 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 17:43:01.663 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 17:43:01.663 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 17:43:03.022 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 17:43:03.080 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:43:03.083 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:43:03.089 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:43:03.092 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:43:03.489 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 17:43:05.527 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 17:43:05.567 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 17:43:05.733 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 17:43:05.733 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 17:43:05.869 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 17:43:05.869 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 17:43:06.136 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 17:43:06.560 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 17:43:06.562 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 17:43:06.562 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 17:43:06.565 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 17:43:06.565 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 17:43:06.568 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 17:43:06.568 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 17:43:06.890 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 17:43:06.893 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 17:43:06.899 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 17:43:06.903 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554025386902 with initial instances count: 2
2019-03-31 17:43:06.912 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 17:43:06.912 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554025386912, current=UP, previous=STARTING]
2019-03-31 17:43:06.915 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 17:43:06.921 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 17:43:06.933 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 17:43:06.966 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 17:43:06.993 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 17:43:07.262 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 17:43:07.269 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.844 seconds (JVM running for 13.963)
2019-03-31 17:56:25.943 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3366cd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:56:27.403 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 17:56:29.379 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 17:56:29.741 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:56:29.750 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$948735fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:56:29.783 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3366cd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 17:56:30.484 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 17:56:30.509 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 17:56:30.509 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 17:56:30.521 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 17:56:30.713 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 17:56:30.714 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3273 ms
2019-03-31 17:56:30.740 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 17:56:30.886 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 17:56:30.887 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 17:56:30.887 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 17:56:30.888 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 17:56:30.890 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 17:56:30.891 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 17:56:32.048 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 17:56:32.108 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:56:32.111 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:56:32.117 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 17:56:32.119 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 17:56:32.584 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 17:56:34.823 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 17:56:34.867 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 17:56:35.044 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 17:56:35.044 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 17:56:35.176 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 17:56:35.177 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 17:56:35.495 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 17:56:35.940 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 17:56:35.941 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 17:56:35.941 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 17:56:35.943 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 17:56:35.944 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 17:56:35.947 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 17:56:35.947 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 17:56:36.214 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 17:56:36.216 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 17:56:36.221 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 17:56:36.226 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554026196225 with initial instances count: 0
2019-03-31 17:56:36.236 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 17:56:36.237 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554026196237, current=UP, previous=STARTING]
2019-03-31 17:56:36.240 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 17:56:36.246 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 17:56:36.262 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 17:56:36.316 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 17:56:36.319 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 17:56:36.558 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 17:56:36.562 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 13.2 seconds (JVM running for 16.858)
2019-03-31 17:57:06.217 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 17:57:06.219 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 17:57:06.219 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 17:57:06.222 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 17:57:06.222 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 17:57:06.226 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 17:57:06.226 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 17:57:06.275 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 18:00:39.212 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$beb3f856] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:00:40.101 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 18:00:41.337 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 18:00:41.606 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:00:41.616 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$6004c17c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:00:41.646 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$beb3f856] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:00:42.341 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 18:00:42.363 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 18:00:42.363 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 18:00:42.375 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 18:00:42.567 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 18:00:42.568 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2446 ms
2019-03-31 18:00:42.591 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 18:00:42.732 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 18:00:42.732 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 18:00:42.732 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 18:00:42.733 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 18:00:42.735 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 18:00:42.736 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 18:00:43.848 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 18:00:43.904 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 18:00:43.906 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 18:00:43.912 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 18:00:43.915 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 18:00:44.284 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 18:00:46.348 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 18:00:46.389 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 18:00:46.571 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 18:00:46.572 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 18:00:46.705 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 18:00:46.705 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 18:00:46.972 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 18:00:47.396 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 18:00:47.397 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 18:00:47.398 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 18:00:47.400 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 18:00:47.401 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 18:00:47.404 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 18:00:47.404 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 18:00:47.748 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 18:00:47.752 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 18:00:47.787 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 18:00:47.791 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554026447790 with initial instances count: 1
2019-03-31 18:00:47.802 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 18:00:47.803 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554026447803, current=UP, previous=STARTING]
2019-03-31 18:00:47.805 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 18:00:47.810 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 18:00:47.824 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 18:00:47.855 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 18:00:47.879 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 18:00:48.114 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 18:00:48.118 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.642 seconds (JVM running for 13.666)
2019-03-31 18:04:05.346 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dccfe29c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:04:06.230 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 18:04:07.671 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 18:04:08.152 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:04:08.170 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$7e20abc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:04:08.231 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dccfe29c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:04:09.163 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 18:04:09.192 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 18:04:09.194 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 18:04:09.208 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 18:04:09.458 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 18:04:09.458 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3196 ms
2019-03-31 18:04:09.487 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 18:04:09.648 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 18:04:09.648 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 18:04:09.648 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 18:04:09.648 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 18:04:09.651 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 18:04:09.652 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 18:04:10.808 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 18:04:10.862 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 18:04:10.864 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 18:04:10.870 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 18:04:10.873 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 18:04:11.242 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 18:04:13.323 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 18:04:13.361 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 18:04:13.526 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 18:04:13.527 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 18:04:13.683 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 18:04:13.683 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 18:04:14.004 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 18:04:14.443 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 18:04:14.445 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 18:04:14.445 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 18:04:14.447 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 18:04:14.448 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 18:04:14.451 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 18:04:14.451 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 18:04:14.780 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 18:04:14.784 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 18:04:14.788 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 18:04:14.792 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554026654791 with initial instances count: 2
2019-03-31 18:04:14.800 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 18:04:14.800 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554026654800, current=UP, previous=STARTING]
2019-03-31 18:04:14.803 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 18:04:14.809 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 18:04:14.821 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 18:04:14.856 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 18:04:14.880 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 18:04:15.172 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 18:04:15.176 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 11.589 seconds (JVM running for 14.634)
2019-03-31 18:09:14.455 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 18:12:48.434 INFO  [nio-8080-exec-2] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 18:12:48.437 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 18:12:48.498 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Completed initialization in 57 ms
2019-03-31 18:12:48.969 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 18:12:49.521 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 18:12:49.530 INFO  [nio-8080-exec-2] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 18:12:49.539 INFO  [nio-8080-exec-2] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 18:12:49.545 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 18:12:49.582 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 18:12:49.589 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@26ab96a2
2019-03-31 18:12:49.770 ERROR [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 
feign.FeignException: status 404 reading DemoClient#getProductList(Integer,Integer,Integer); content:
<!doctype html><html lang="en"><head><title>HTTP Status 404 – Not Found</title><style type="text/css">h1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} h2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} h3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} body {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} b {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} p {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;} a {color:black;} a.name {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP Status 404 – Not Found</h1></body></html>
	at feign.FeignException.errorStatus(FeignException.java:62)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:91)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:44)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$591d5805.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-03-31 18:12:49.776 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:800毫秒,响应内容:
{}
2019-03-31 18:12:50.552 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 18:15:18.402 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$62d9730d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:15:19.680 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 18:15:21.816 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 18:15:22.277 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:15:22.290 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$42a3c33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:15:22.330 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$62d9730d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 18:15:23.357 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 18:15:23.391 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 18:15:23.395 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 18:15:23.413 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 18:15:23.684 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 18:15:23.685 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3977 ms
2019-03-31 18:15:23.719 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 18:15:23.964 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 18:15:23.965 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 18:15:23.965 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 18:15:23.965 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 18:15:23.971 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 18:15:23.971 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 18:15:25.646 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 18:15:25.743 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 18:15:25.751 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 18:15:25.760 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 18:15:25.766 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 18:15:26.385 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 18:15:29.237 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 18:15:29.316 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 18:15:29.662 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 18:15:29.663 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 18:15:29.886 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 18:15:29.887 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 18:15:30.823 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 18:15:31.722 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 18:15:31.726 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 18:15:31.730 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 18:15:31.733 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 18:15:31.733 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 18:15:31.736 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 18:15:31.736 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 18:15:32.240 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 18:15:32.246 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 18:15:32.257 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 18:15:32.265 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554027332262 with initial instances count: 2
2019-03-31 18:15:32.286 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 18:15:32.287 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554027332287, current=UP, previous=STARTING]
2019-03-31 18:15:32.290 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 18:15:32.299 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 18:15:32.334 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 18:15:32.370 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 18:15:32.415 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 18:15:32.724 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 18:15:32.732 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 17.003 seconds (JVM running for 20.245)
2019-03-31 18:16:01.777 INFO  [nio-8080-exec-7] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 18:16:01.783 INFO  [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 18:16:01.839 INFO  [nio-8080-exec-7] o.s.web.servlet.DispatcherServlet: - Completed initialization in 56 ms
2019-03-31 18:16:02.150 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 18:16:02.410 INFO  [nio-8080-exec-7] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 18:16:02.424 INFO  [nio-8080-exec-7] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 18:16:02.429 INFO  [nio-8080-exec-7] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 18:16:02.435 INFO  [nio-8080-exec-7] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 18:16:02.459 INFO  [nio-8080-exec-7] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 18:16:02.465 INFO  [nio-8080-exec-7] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@71b987e1
2019-03-31 18:16:03.441 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 18:16:03.879 ERROR [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Type definition error: [simple type, class com.deepexi.util.pageHelper.PageBean]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 2]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:44)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$3f81f2f5.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class com.deepexi.util.pageHelper.PageBean]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 2]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:242)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 2]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1452)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1028)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1297)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 18:16:03.888 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1732毫秒,响应内容:
{}
2019-03-31 19:00:11.284 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3366cd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:00:12.108 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:00:13.266 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:00:13.544 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:00:13.556 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$948735fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:00:13.601 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f3366cd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:00:14.318 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:00:14.340 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:00:14.341 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:00:14.352 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:00:14.534 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:00:14.534 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2407 ms
2019-03-31 19:00:14.561 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:00:14.705 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:00:14.706 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:00:14.706 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:00:14.706 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:00:14.710 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:00:14.711 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:00:15.782 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:00:15.838 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:00:15.841 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:00:15.847 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:00:15.848 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:00:16.227 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:00:18.251 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:00:18.290 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:00:18.465 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:00:18.465 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:00:18.602 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:00:18.603 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:00:18.871 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:00:19.300 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:00:19.301 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:00:19.301 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:00:19.303 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:00:19.303 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:00:19.306 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:00:19.306 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:00:19.559 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:00:19.562 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:00:19.568 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:00:19.573 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554030019572 with initial instances count: 0
2019-03-31 19:00:19.583 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:00:19.584 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554030019584, current=UP, previous=STARTING]
2019-03-31 19:00:19.587 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:00:19.595 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:00:19.611 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:00:19.670 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:00:19.671 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:00:19.991 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:00:19.995 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.908 seconds (JVM running for 14.0)
2019-03-31 19:00:49.564 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:00:49.565 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:00:49.566 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:00:49.568 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:00:49.569 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:00:49.572 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 19:00:49.572 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:00:49.620 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:02:27.270 INFO  [nio-8080-exec-1] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 19:02:27.271 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 19:02:27.313 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 41 ms
2019-03-31 19:02:27.629 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:02:27.861 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:02:27.873 INFO  [nio-8080-exec-1] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 19:02:27.878 INFO  [nio-8080-exec-1] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 19:02:27.885 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 19:02:27.890 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3ad9a6e4
2019-03-31 19:02:27.988 ERROR [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:44)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$2cbf1299.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:02:27.997 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:364毫秒,响应内容:
{}
2019-03-31 19:03:19.942 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:03:19.945 ERROR [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:44)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$2cbf1299.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:03:19.957 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:14毫秒,响应内容:
{}
2019-03-31 19:03:34.164 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:03:34.167 ERROR [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:44)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$2cbf1299.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:03:34.189 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:23毫秒,响应内容:
{}
2019-03-31 19:03:58.908 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:04:02.749 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:04:51.490 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:05:19.310 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:10:18.990 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b97ffa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:10:19.824 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:10:21.154 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:10:21.444 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:10:21.455 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$cce8c8cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:10:21.500 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b97ffa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:10:22.366 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:10:22.393 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:10:22.396 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:10:22.410 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:10:22.612 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:10:22.613 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2763 ms
2019-03-31 19:10:22.644 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:10:22.814 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:10:22.815 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:10:22.815 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:10:22.816 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:10:22.819 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:10:22.819 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:10:24.295 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:10:24.374 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:10:24.377 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:10:24.383 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:10:24.386 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:10:24.865 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:10:27.149 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:10:27.203 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:10:27.417 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:10:27.418 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:10:27.593 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:10:27.594 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:10:27.974 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:10:28.409 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:10:28.411 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:10:28.411 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:10:28.413 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:10:28.414 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:10:28.419 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:10:28.420 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:10:28.811 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:10:28.815 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:10:28.821 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:10:28.826 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554030628824 with initial instances count: 1
2019-03-31 19:10:28.837 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:10:28.838 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554030628838, current=UP, previous=STARTING]
2019-03-31 19:10:28.841 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:10:28.851 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:10:28.868 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:10:28.907 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:10:28.935 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:10:29.228 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:10:29.233 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 12.491 seconds (JVM running for 17.558)
2019-03-31 19:12:41.538 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 19:12:41.540 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 19:12:41.601 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 60 ms
2019-03-31 19:12:42.049 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:12:56.091 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:12:56.223 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 19:12:56.257 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 19:12:56.312 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 19:12:56.433 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:12:56.456 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@480ac511
2019-03-31 19:12:57.329 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:14:37.029 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
feign.RetryableException: Read timed out executing GET http://deepexi-service-a-provider/deepexi-service-a/provider/getProductList?page=1&size=2&price=20
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:44)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$5dc81a0f.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 79 common frames omitted
2019-03-31 19:14:37.041 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:114985毫秒,响应内容:
{}
2019-03-31 19:19:28.848 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4e5b8202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:19:30.235 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:19:32.658 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:19:33.231 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:19:33.250 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$efac4b28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:19:33.386 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4e5b8202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:19:34.910 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:19:34.982 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:19:34.987 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:19:35.014 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:19:35.391 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:19:35.392 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 5111 ms
2019-03-31 19:19:35.442 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:19:35.750 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:19:35.751 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:19:35.752 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:19:35.752 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:19:35.757 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:19:35.758 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:19:37.932 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:19:38.015 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:19:38.017 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:19:38.026 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:19:38.029 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:19:38.501 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:19:42.167 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:19:42.290 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:19:42.614 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:19:42.617 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:19:42.904 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:19:42.905 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:19:43.779 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:19:44.337 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:19:44.339 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:19:44.341 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:19:44.344 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:19:44.345 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:19:44.348 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:19:44.348 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:19:44.743 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:19:44.747 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:19:44.757 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:19:44.766 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554031184761 with initial instances count: 0
2019-03-31 19:19:44.780 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:19:44.781 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554031184781, current=UP, previous=STARTING]
2019-03-31 19:19:44.787 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:19:44.799 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:19:44.825 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:19:44.931 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:19:44.937 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:19:45.515 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:19:45.522 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 21.882 seconds (JVM running for 26.275)
2019-03-31 19:20:14.749 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:20:14.753 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:20:14.753 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:20:14.763 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:20:14.763 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:20:14.792 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 19:20:14.793 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:20:14.935 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:20:35.102 INFO  [nio-8080-exec-1] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 19:20:35.140 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 19:20:35.231 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 89 ms
2019-03-31 19:20:36.032 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:20:36.977 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:20:37.016 INFO  [nio-8080-exec-1] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 19:20:37.058 INFO  [nio-8080-exec-1] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 19:20:37.079 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 19:20:37.105 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@726c4514
2019-03-31 19:20:37.372 ERROR [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:20:37.383 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1321毫秒,响应内容:
{}
2019-03-31 19:20:54.735 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:20:54.738 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:20:54.750 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:13毫秒,响应内容:
{}
2019-03-31 19:20:56.124 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:20:56.131 ERROR [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:20:56.200 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:71毫秒,响应内容:
{}
2019-03-31 19:20:57.037 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:20:57.045 ERROR [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:20:57.055 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:12毫秒,响应内容:
{}
2019-03-31 19:20:57.754 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:20:57.765 ERROR [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:20:57.770 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:8毫秒,响应内容:
{}
2019-03-31 19:20:58.278 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:20:58.280 ERROR [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:20:58.288 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:10毫秒,响应内容:
{}
2019-03-31 19:20:58.919 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:20:58.921 ERROR [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 19:20:58.928 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:9毫秒,响应内容:
{}
2019-03-31 19:21:08.131 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:21:19.312 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:21:21.459 ERROR [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 
feign.RetryableException: Read timed out executing GET http://deepexi-service-a-provider/deepexi-service-a/provider/getProductList?page=1&size=2&price=20
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 79 common frames omitted
2019-03-31 19:21:21.465 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:2146毫秒,响应内容:
{}
2019-03-31 19:21:58.824 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:22:00.850 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
feign.RetryableException: Read timed out executing GET http://deepexi-service-a-provider/deepexi-service-a/provider/getProductList?page=1&size=2&price=20
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$aef50c1b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:152)
	at feign.Client$Default.execute(Client.java:74)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:89)
	at org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:55)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 79 common frames omitted
2019-03-31 19:22:00.858 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:2017毫秒,响应内容:
{}
2019-03-31 19:22:35.719 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9b54cabe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:22:36.655 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:22:38.010 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:22:38.306 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:22:38.315 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$3ca593e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:22:38.349 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9b54cabe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:22:39.151 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:22:39.223 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:22:39.228 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:22:39.248 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:22:39.507 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:22:39.507 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2826 ms
2019-03-31 19:22:39.531 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:22:39.759 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:22:39.760 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:22:39.761 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:22:39.761 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:22:39.765 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:22:39.766 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:22:42.769 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:22:42.926 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:22:42.929 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:22:42.939 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:22:42.942 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:22:43.673 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:22:47.163 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:22:47.231 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:22:47.752 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:22:47.752 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:22:48.260 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:22:48.261 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:22:48.620 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:22:49.185 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:22:49.186 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:22:49.186 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:22:49.189 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:22:49.190 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:22:49.193 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:22:49.194 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:22:49.796 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:22:49.801 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:22:49.805 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:22:49.812 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554031369809 with initial instances count: 2
2019-03-31 19:22:49.822 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:22:49.822 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554031369822, current=UP, previous=STARTING]
2019-03-31 19:22:49.863 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:22:49.871 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:22:49.895 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:22:49.937 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:22:49.984 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:22:50.565 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:22:50.572 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 17.577 seconds (JVM running for 22.237)
2019-03-31 19:23:28.965 INFO  [nio-8080-exec-8] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 19:23:28.971 INFO  [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 19:23:29.017 INFO  [nio-8080-exec-8] o.s.web.servlet.DispatcherServlet: - Completed initialization in 45 ms
2019-03-31 19:23:29.331 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:23:29.576 INFO  [nio-8080-exec-8] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:23:29.589 INFO  [nio-8080-exec-8] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 19:23:29.599 INFO  [nio-8080-exec-8] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 19:23:29.605 INFO  [nio-8080-exec-8] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 19:23:29.622 INFO  [nio-8080-exec-8] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:23:29.627 INFO  [nio-8080-exec-8] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7f4868e4
2019-03-31 19:23:30.610 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:24:10.672 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:27:49.198 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:32:49.202 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:33:22.090 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c57c2ca5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:33:24.258 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:33:26.193 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:33:26.579 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:33:26.592 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$66ccf5cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:33:26.637 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c57c2ca5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:33:27.566 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:33:27.605 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:33:27.606 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:33:27.621 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:33:27.883 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:33:27.884 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3590 ms
2019-03-31 19:33:27.915 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:33:28.112 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:33:28.113 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:33:28.114 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:33:28.114 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:33:28.117 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:33:28.118 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:33:29.348 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:33:29.405 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:33:29.409 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:33:29.416 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:33:29.420 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:33:29.791 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:33:31.865 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:33:31.911 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:33:32.083 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:33:32.084 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:33:32.220 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:33:32.221 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:33:32.489 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:33:32.953 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:33:32.955 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:33:32.955 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:33:32.957 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:33:32.958 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:33:32.961 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:33:32.961 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:33:33.278 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:33:33.281 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:33:33.288 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:33:33.293 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554032013291 with initial instances count: 2
2019-03-31 19:33:33.304 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:33:33.305 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554032013305, current=UP, previous=STARTING]
2019-03-31 19:33:33.308 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:33:33.316 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:33:33.330 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:33:33.363 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:33:33.388 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:33:33.607 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:33:33.612 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 15.548 seconds (JVM running for 19.866)
2019-03-31 19:34:22.440 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 19:34:22.444 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 19:34:22.495 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 50 ms
2019-03-31 19:34:22.844 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:34:23.160 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:34:23.173 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 19:34:23.179 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 19:34:23.186 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 19:34:23.207 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:34:23.212 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@77f8f703
2019-03-31 19:34:24.191 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:37:36.336 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a2c7e61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:37:37.275 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:37:38.754 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:37:39.080 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:37:39.090 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$2b7d4787] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:37:39.128 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8a2c7e61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:37:39.979 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:37:40.011 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:37:40.014 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:37:40.028 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:37:40.236 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:37:40.236 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2935 ms
2019-03-31 19:37:40.268 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:37:40.437 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:37:40.438 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:37:40.438 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:37:40.438 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:37:40.441 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:37:40.442 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:37:42.021 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:37:42.104 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:37:42.107 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:37:42.114 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:37:42.117 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:37:42.641 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:37:45.426 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:37:45.483 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:37:45.737 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:37:45.737 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:37:45.995 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:37:45.996 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:37:46.413 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:37:46.881 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:37:46.883 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:37:46.883 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:37:46.886 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:37:46.887 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:37:46.890 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:37:46.892 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:37:47.315 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:37:47.320 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:37:47.326 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:37:47.333 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554032267330 with initial instances count: 2
2019-03-31 19:37:47.345 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:37:47.345 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554032267345, current=UP, previous=STARTING]
2019-03-31 19:37:47.349 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:37:47.356 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:37:47.375 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:37:47.417 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:37:47.456 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:37:47.783 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:37:47.792 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 14.001 seconds (JVM running for 19.048)
2019-03-31 19:38:56.405 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b97ffa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:38:57.671 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:38:59.731 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:39:00.244 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:39:00.262 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$cce8c8cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:39:00.309 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b97ffa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:39:01.207 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:39:01.235 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:39:01.238 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:39:01.254 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:39:01.452 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:39:01.453 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3752 ms
2019-03-31 19:39:01.484 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:39:01.645 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:39:01.646 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:39:01.646 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:39:01.647 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:39:01.649 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:39:01.650 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:39:03.046 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:39:03.122 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:39:03.124 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:39:03.133 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:39:03.136 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:39:03.649 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:39:05.949 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:39:06.003 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:39:06.216 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:39:06.217 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:39:06.399 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:39:06.399 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:39:06.830 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:39:07.270 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:39:07.271 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:39:07.272 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:39:07.274 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:39:07.275 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:39:07.277 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:39:07.278 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:39:07.655 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:39:07.659 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:39:07.666 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:39:07.673 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554032347671 with initial instances count: 2
2019-03-31 19:39:07.684 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:39:07.684 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554032347684, current=UP, previous=STARTING]
2019-03-31 19:39:07.688 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:39:07.699 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:39:07.717 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:39:07.755 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:39:07.788 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:39:08.083 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:39:08.089 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 17.007 seconds (JVM running for 21.965)
2019-03-31 19:39:59.395 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 19:39:59.397 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 19:39:59.456 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 59 ms
2019-03-31 19:39:59.803 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:40:00.120 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:40:00.135 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 19:40:00.142 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 19:40:00.150 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 19:40:00.172 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:40:00.177 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5fe2454e
2019-03-31 19:40:01.226 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:46:06.737 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f64f32a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:46:07.555 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 19:46:08.809 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 19:46:09.072 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:46:09.083 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$d0b5bc50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:46:09.118 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2f64f32a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 19:46:09.859 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 19:46:09.884 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 19:46:09.884 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 19:46:09.895 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 19:46:10.086 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 19:46:10.086 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2509 ms
2019-03-31 19:46:10.115 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 19:46:10.260 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 19:46:10.260 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 19:46:10.261 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 19:46:10.261 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 19:46:10.263 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 19:46:10.264 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 19:46:11.408 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 19:46:11.466 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:46:11.469 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:46:11.476 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 19:46:11.479 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 19:46:11.883 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 19:46:14.019 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 19:46:14.061 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 19:46:14.238 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 19:46:14.238 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 19:46:14.376 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 19:46:14.376 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 19:46:14.664 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:46:15.108 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:46:15.109 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:46:15.110 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:46:15.112 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:46:15.113 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:46:15.115 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 19:46:15.115 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:46:15.374 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:46:15.377 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 19:46:15.382 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 19:46:15.388 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554032775386 with initial instances count: 0
2019-03-31 19:46:15.400 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 19:46:15.401 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554032775401, current=UP, previous=STARTING]
2019-03-31 19:46:15.403 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 19:46:15.410 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 19:46:15.424 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 19:46:15.481 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 19:46:15.481 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 19:46:15.728 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 19:46:15.733 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.817 seconds (JVM running for 14.529)
2019-03-31 19:46:45.379 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 19:46:45.380 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 19:46:45.381 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 19:46:45.385 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 19:46:45.385 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 19:46:45.390 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 19:46:45.390 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 19:46:45.437 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 19:47:38.140 INFO  [nio-8080-exec-3] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 19:47:38.142 INFO  [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 19:47:38.187 INFO  [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet: - Completed initialization in 45 ms
2019-03-31 19:47:38.535 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 19:47:38.847 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:47:38.865 INFO  [nio-8080-exec-3] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 19:47:38.873 INFO  [nio-8080-exec-3] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 19:47:38.883 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 19:47:38.908 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:47:38.914 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4f8ed35
2019-03-31 19:47:39.887 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 19:47:39.981 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1333毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":0}}
2019-03-31 19:51:15.119 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 19:56:15.121 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:01:08.678 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c5b701] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:01:09.579 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:01:11.142 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:01:11.433 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:01:11.443 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$e2168027] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:01:11.482 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c5b701] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:01:12.307 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:01:12.333 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:01:12.339 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:01:12.351 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:01:12.549 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:01:12.550 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2949 ms
2019-03-31 20:01:12.576 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:01:12.744 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:01:12.745 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:01:12.745 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:01:12.746 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:01:12.749 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:01:12.750 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:01:14.066 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:01:14.128 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:01:14.131 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:01:14.138 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:01:14.141 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:01:14.597 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:01:16.772 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:01:16.813 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:01:17.103 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:01:17.104 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:01:17.241 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:01:17.241 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:01:17.507 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:01:17.943 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:01:17.944 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:01:17.944 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:01:17.947 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:01:17.947 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:01:17.949 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:01:17.950 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:01:18.278 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:01:18.282 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:01:18.287 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:01:18.292 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554033678290 with initial instances count: 2
2019-03-31 20:01:18.300 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:01:18.301 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554033678301, current=UP, previous=STARTING]
2019-03-31 20:01:18.304 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:01:18.312 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:01:18.326 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:01:18.358 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:01:18.389 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:01:18.667 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:01:18.672 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 12.169 seconds (JVM running for 15.889)
2019-03-31 20:01:33.648 INFO  [nio-8080-exec-2] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:01:33.651 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:01:33.707 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Completed initialization in 55 ms
2019-03-31 20:01:34.113 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,0]
2019-03-31 20:01:34.395 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:01:34.406 INFO  [nio-8080-exec-2] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:01:34.416 INFO  [nio-8080-exec-2] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:01:34.424 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:01:34.440 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:01:34.446 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6fe9c569
2019-03-31 20:01:34.780 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:558毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":0}}
2019-03-31 20:01:35.427 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:02:14.652 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:02:42.902 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:06:16.962 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:06:17.953 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:06:19.419 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:06:20.179 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:06:24.547 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:06:57.810 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:06:58.954 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:06:59.660 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:07:00.223 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:07:00.924 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:11:17.959 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:13:09.532 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$74041080] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:13:10.343 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:13:11.601 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:13:11.861 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:13:11.875 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$1554d9a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:13:11.938 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$74041080] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:13:12.669 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:13:12.692 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:13:12.695 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:13:12.707 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:13:12.906 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:13:12.908 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2547 ms
2019-03-31 20:13:12.933 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:13:13.088 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:13:13.088 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:13:13.088 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:13:13.088 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:13:13.091 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:13:13.091 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:13:14.228 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:13:14.289 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:13:14.292 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:13:14.298 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:13:14.301 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:13:14.688 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:13:16.855 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:13:16.899 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:13:17.080 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:13:17.081 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:13:17.221 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:13:17.222 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:13:17.488 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:13:17.931 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:13:17.933 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:13:17.933 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:13:17.935 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:13:17.936 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:13:17.938 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:13:17.939 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:13:18.266 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:13:18.270 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:13:18.276 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:13:18.281 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554034398280 with initial instances count: 2
2019-03-31 20:13:18.290 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:13:18.291 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554034398291, current=UP, previous=STARTING]
2019-03-31 20:13:18.294 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:13:18.299 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:13:18.313 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:13:18.343 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:13:18.367 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:13:18.636 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:13:18.640 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.952 seconds (JVM running for 14.296)
2019-03-31 20:13:35.384 INFO  [nio-8080-exec-3] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:13:35.385 INFO  [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:13:35.423 INFO  [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet: - Completed initialization in 37 ms
2019-03-31 20:13:35.715 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:13:36.009 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:13:36.027 INFO  [nio-8080-exec-3] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:13:36.033 INFO  [nio-8080-exec-3] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:13:36.041 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:13:36.058 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:13:36.064 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@dba3e4c
2019-03-31 20:13:37.046 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:13:39.725 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:13:41.041 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:13:42.110 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:24:42.627 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef6ee038] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:24:43.573 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:24:44.981 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:24:45.243 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:24:45.254 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$90bfa95e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:24:45.309 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef6ee038] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:24:46.022 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:24:46.053 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:24:46.054 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:24:46.067 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:24:46.328 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:24:46.328 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2735 ms
2019-03-31 20:24:46.352 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:24:46.484 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:24:46.484 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:24:46.484 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:24:46.484 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:24:46.487 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:24:46.487 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:24:47.628 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:24:47.682 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:24:47.731 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:24:47.738 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:24:47.745 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:24:48.148 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:24:50.399 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:24:50.451 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:24:50.711 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:24:50.712 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:24:50.855 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:24:50.855 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:24:51.163 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:24:51.597 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:24:51.598 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:24:51.599 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:24:51.601 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:24:51.601 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:24:51.604 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:24:51.604 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:24:51.940 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:24:51.943 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:24:51.948 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:24:51.952 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554035091951 with initial instances count: 1
2019-03-31 20:24:51.961 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:24:51.962 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554035091962, current=UP, previous=STARTING]
2019-03-31 20:24:51.965 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:24:51.970 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:24:51.984 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:24:52.019 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:24:52.046 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:24:52.318 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:24:52.322 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 11.915 seconds (JVM running for 16.053)
2019-03-31 20:25:38.709 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:25:38.711 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:25:38.758 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 46 ms
2019-03-31 20:25:39.061 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:25:39.305 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:25:39.318 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:25:39.324 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:25:39.331 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:25:39.354 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:25:39.361 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6171e185
2019-03-31 20:25:39.724 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:561毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"dr":0}}
2019-03-31 20:25:40.339 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:25:44.908 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:25:44.922 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:9毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"dr":0}}
2019-03-31 20:26:02.494 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:26:02.510 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:7毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"dr":0}}
2019-03-31 20:26:50.153 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:26:50.234 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:66毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":0}}
2019-03-31 20:28:30.659 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3726da04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:28:32.122 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:28:34.077 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:28:34.456 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:28:34.469 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$d877a32a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:28:34.513 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3726da04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:28:35.516 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:28:35.554 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:28:35.557 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:28:35.574 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:28:35.859 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:28:35.860 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3704 ms
2019-03-31 20:28:35.898 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:28:36.085 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:28:36.086 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:28:36.086 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:28:36.086 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:28:36.090 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:28:36.091 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:28:37.338 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:28:37.398 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:28:37.401 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:28:37.410 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:28:37.413 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:28:37.768 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:28:39.882 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:28:39.923 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:28:40.096 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:28:40.097 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:28:40.227 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:28:40.227 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:28:40.497 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:28:40.924 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:28:40.926 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:28:40.926 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:28:40.928 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:28:40.928 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:28:40.931 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:28:40.931 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:28:41.247 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:28:41.251 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:28:41.256 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:28:41.260 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554035321259 with initial instances count: 2
2019-03-31 20:28:41.270 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:28:41.270 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554035321270, current=UP, previous=STARTING]
2019-03-31 20:28:41.273 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:28:41.281 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:28:41.294 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:28:41.324 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:28:41.351 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:28:41.612 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:28:41.617 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 16.123 seconds (JVM running for 19.388)
2019-03-31 20:29:13.204 INFO  [nio-8080-exec-1] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:29:13.206 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:29:13.256 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 49 ms
2019-03-31 20:29:13.540 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:29:13.824 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:29:13.837 INFO  [nio-8080-exec-1] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:29:13.842 INFO  [nio-8080-exec-1] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:29:13.851 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:29:13.871 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:29:13.876 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@26d72566
2019-03-31 20:29:14.548 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:885毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"dr":0}}
2019-03-31 20:29:14.858 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:32:16.926 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:32:17.373 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:445毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"dr":0}}
2019-03-31 20:33:13.099 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$53ce764] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:33:13.906 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:33:15.140 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:33:15.450 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:33:15.460 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$a68db08a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:33:15.492 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$53ce764] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:33:16.192 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:33:16.214 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:33:16.215 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:33:16.226 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:33:16.403 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:33:16.404 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2478 ms
2019-03-31 20:33:16.429 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:33:16.580 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:33:16.580 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:33:16.580 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:33:16.581 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:33:16.584 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:33:16.584 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:33:17.668 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:33:17.726 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:33:17.729 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:33:17.733 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:33:17.736 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:33:18.129 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:33:20.183 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:33:20.226 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:33:20.392 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:33:20.393 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:33:20.533 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:33:20.533 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:33:20.806 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:33:21.235 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:33:21.236 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:33:21.237 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:33:21.239 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:33:21.239 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:33:21.242 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:33:21.242 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:33:21.603 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:33:21.606 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:33:21.611 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:33:21.616 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554035601615 with initial instances count: 2
2019-03-31 20:33:21.625 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:33:21.625 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554035601625, current=UP, previous=STARTING]
2019-03-31 20:33:21.628 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:33:21.634 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:33:21.645 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:33:21.675 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:33:21.700 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:33:21.934 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:33:21.939 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.805 seconds (JVM running for 14.692)
2019-03-31 20:34:10.818 INFO  [nio-8080-exec-1] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:34:10.822 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:34:10.878 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 55 ms
2019-03-31 20:34:11.170 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:34:11.412 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:34:11.428 INFO  [nio-8080-exec-1] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:34:11.434 INFO  [nio-8080-exec-1] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:34:11.441 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:34:11.458 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:34:11.463 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3470af0a
2019-03-31 20:34:12.117 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:845毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"dr":0}}
2019-03-31 20:34:12.446 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:34:27.959 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:34:28.356 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:384毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":0}}
2019-03-31 20:36:35.945 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ab352a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:36:36.835 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:36:38.226 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:36:38.513 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:36:38.527 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$4c85f399] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:36:38.577 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ab352a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:36:39.412 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:36:39.441 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:36:39.443 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:36:39.455 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:36:39.646 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:36:39.647 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2783 ms
2019-03-31 20:36:39.674 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:36:39.862 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:36:39.863 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:36:39.864 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:36:39.864 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:36:39.867 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:36:39.868 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:36:41.217 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:36:41.289 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:36:41.292 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:36:41.300 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:36:41.302 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:36:41.794 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:36:44.216 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:36:44.265 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:36:44.461 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:36:44.462 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:36:44.633 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:36:44.633 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:36:45.014 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:36:45.446 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:36:45.447 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:36:45.448 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:36:45.450 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:36:45.450 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:36:45.452 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:36:45.453 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:36:45.820 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:36:45.824 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:36:45.830 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:36:45.835 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554035805833 with initial instances count: 2
2019-03-31 20:36:45.849 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:36:45.850 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554035805850, current=UP, previous=STARTING]
2019-03-31 20:36:45.854 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:36:45.862 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:36:45.879 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:36:45.917 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:36:45.946 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:36:46.212 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:36:46.217 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 13.239 seconds (JVM running for 21.856)
2019-03-31 20:38:06.363 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:38:06.364 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:38:06.416 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 51 ms
2019-03-31 20:38:06.747 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:38:07.052 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:38:07.067 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:38:07.074 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:38:07.082 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:38:07.103 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:38:07.107 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4f84ee50
2019-03-31 20:38:07.993 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:1125毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"dr":0}}
2019-03-31 20:38:08.087 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:40:27.876 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34ae9c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:40:29.516 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:40:31.478 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:40:31.836 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:40:31.855 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$a49bb2ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:40:31.928 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34ae9c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:40:32.905 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:40:32.950 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:40:32.954 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:40:32.976 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:40:33.244 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:40:33.244 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3694 ms
2019-03-31 20:40:33.275 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:40:33.460 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:40:33.460 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:40:33.460 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:40:33.461 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:40:33.464 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:40:33.465 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:40:34.745 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:40:34.807 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:40:34.810 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:40:34.815 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:40:34.818 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:40:35.228 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:40:37.330 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:40:37.369 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:40:37.542 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:40:37.543 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:40:37.678 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:40:37.679 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:40:37.967 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:40:38.385 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:40:38.386 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:40:38.387 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:40:38.389 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:40:38.390 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:40:38.394 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:40:38.394 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:40:38.711 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:40:38.714 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:40:38.719 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:40:38.723 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554036038722 with initial instances count: 2
2019-03-31 20:40:38.733 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:40:38.733 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554036038733, current=UP, previous=STARTING]
2019-03-31 20:40:38.736 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:40:38.742 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:40:38.756 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:40:38.788 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:40:38.813 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:40:39.039 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:40:39.044 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 15.261 seconds (JVM running for 19.497)
2019-03-31 20:41:37.635 INFO  [nio-8080-exec-5] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:41:37.637 INFO  [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:41:37.689 INFO  [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet: - Completed initialization in 52 ms
2019-03-31 20:41:38.025 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:41:38.271 INFO  [nio-8080-exec-5] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:41:38.285 INFO  [nio-8080-exec-5] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:41:38.290 INFO  [nio-8080-exec-5] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:41:38.296 INFO  [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:41:38.313 INFO  [nio-8080-exec-5] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:41:38.317 INFO  [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6219adcb
2019-03-31 20:41:38.989 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:877毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"code":"500","msg":"Request method 'POST' not supported"}}
2019-03-31 20:41:39.301 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:42:10.380 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:42:10.402 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:19毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"code":"500","msg":"Request method 'POST' not supported"}}
2019-03-31 20:45:45.819 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d36c0c25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:45:48.555 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:45:50.657 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:45:51.076 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:45:51.088 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$74bcd54b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:45:51.134 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d36c0c25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:45:52.224 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:45:52.261 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:45:52.266 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:45:52.282 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:45:52.557 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:45:52.557 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3968 ms
2019-03-31 20:45:52.589 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:45:52.881 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:45:52.884 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:45:52.885 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:45:52.885 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:45:52.896 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:45:52.897 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:45:54.612 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:45:54.669 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:45:54.671 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:45:54.678 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:45:54.681 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:45:55.239 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:45:57.350 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:45:57.389 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:45:57.558 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:45:57.558 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:45:57.686 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:45:57.686 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:45:57.952 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:45:58.367 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:45:58.368 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:45:58.369 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:45:58.371 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:45:58.371 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:45:58.375 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:45:58.376 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:45:58.728 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:45:58.731 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:45:58.737 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:45:58.744 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554036358742 with initial instances count: 2
2019-03-31 20:45:58.756 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:45:58.757 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554036358757, current=UP, previous=STARTING]
2019-03-31 20:45:58.760 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:45:58.767 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:45:58.785 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:45:58.824 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:45:58.856 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:45:59.076 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:45:59.080 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 16.353 seconds (JVM running for 19.898)
2019-03-31 20:46:31.733 INFO  [nio-8080-exec-1] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:46:31.739 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:46:31.786 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 46 ms
2019-03-31 20:46:32.088 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:46:32.340 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:46:32.353 INFO  [nio-8080-exec-1] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:46:32.364 INFO  [nio-8080-exec-1] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:46:32.370 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:46:32.386 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:46:32.391 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@675f65f4
2019-03-31 20:46:33.289 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1184毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/lang3/StringUtils"}
2019-03-31 20:46:33.375 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:46:40.854 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 20:46:40.998 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:52毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"code":"500","msg":"Request method 'POST' not supported"}}
2019-03-31 20:52:10.497 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$38297a6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:52:11.358 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:52:12.605 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:52:12.894 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:52:12.908 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$d97a4390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:52:12.942 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$38297a6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:52:13.660 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:52:13.682 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:52:13.683 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:52:13.694 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:52:13.879 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:52:13.880 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2502 ms
2019-03-31 20:52:13.900 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:52:14.027 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:52:14.028 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:52:14.028 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:52:14.028 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:52:14.031 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:52:14.031 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:52:15.122 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:52:15.179 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:52:15.182 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:52:15.188 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:52:15.191 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:52:15.607 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:52:17.647 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:52:17.687 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:52:17.864 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:52:17.864 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:52:18.003 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:52:18.004 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:52:18.258 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:52:18.691 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:52:18.692 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:52:18.693 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:52:18.695 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:52:18.695 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:52:18.698 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:52:18.698 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:52:18.945 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:52:18.947 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:52:18.952 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:52:18.956 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554036738955 with initial instances count: 0
2019-03-31 20:52:18.965 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:52:18.965 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554036738965, current=UP, previous=STARTING]
2019-03-31 20:52:18.968 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:52:18.977 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:52:18.991 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:52:19.046 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:52:19.049 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:52:19.313 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:52:19.318 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 11.008 seconds (JVM running for 14.301)
2019-03-31 20:52:48.949 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:52:48.952 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:52:48.953 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:52:48.953 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:52:48.953 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:52:48.956 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 20:52:48.956 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:52:49.003 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:54:24.773 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:54:24.774 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:54:24.819 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 45 ms
2019-03-31 20:54:25.112 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:54:25.350 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:54:25.362 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:54:25.368 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:54:25.375 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:54:25.391 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:54:25.395 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@dfaa8fc
2019-03-31 20:54:26.276 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1144毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/lang3/StringUtils"}
2019-03-31 20:54:26.380 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:54:29.691 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:54:29.734 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:41毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.deepexi.util.config.JsonDateSerializer"}
2019-03-31 20:54:31.697 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:54:31.733 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:29毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.deepexi.util.config.JsonDateSerializer"}
2019-03-31 20:54:32.928 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:54:32.979 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:30毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.deepexi.util.config.JsonDateSerializer"}
2019-03-31 20:54:34.232 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:54:34.254 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:21毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.deepexi.util.config.JsonDateSerializer"}
2019-03-31 20:56:47.560 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7dbf976e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:56:50.075 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:56:52.660 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:56:53.250 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:56:53.261 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$1f106094] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:56:53.306 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7dbf976e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:56:54.422 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:56:54.456 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:56:54.459 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:56:54.482 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:56:54.735 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:56:54.735 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 4600 ms
2019-03-31 20:56:54.766 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:56:55.037 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:56:55.038 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:56:55.039 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:56:55.039 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:56:55.042 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:56:55.042 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:56:56.887 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:56:56.945 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:56:56.948 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:56:56.953 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:56:56.955 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:56:57.341 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:56:59.425 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:56:59.465 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:56:59.638 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:56:59.639 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:56:59.772 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:56:59.773 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:57:00.122 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:57:00.551 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:57:00.553 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:57:00.553 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:57:00.555 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:57:00.556 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:57:00.558 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:57:00.559 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:57:00.920 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:57:00.927 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:57:00.934 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:57:00.942 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554037020940 with initial instances count: 2
2019-03-31 20:57:00.962 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:57:00.963 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554037020963, current=UP, previous=STARTING]
2019-03-31 20:57:00.967 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:57:00.977 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:57:00.996 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:57:01.033 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:57:01.069 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:57:01.310 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:57:01.314 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 18.313 seconds (JVM running for 22.216)
2019-03-31 20:57:31.643 INFO  [nio-8080-exec-1] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 20:57:31.654 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 20:57:31.710 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 56 ms
2019-03-31 20:57:32.067 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:57:32.305 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:57:32.317 INFO  [nio-8080-exec-1] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 20:57:32.322 INFO  [nio-8080-exec-1] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 20:57:32.329 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 20:57:32.350 INFO  [nio-8080-exec-1] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:57:32.354 INFO  [nio-8080-exec-1] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3ab9d0d1
2019-03-31 20:57:33.243 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1158毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/lang3/StringUtils"}
2019-03-31 20:57:33.334 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 20:57:36.261 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:57:36.308 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:46毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.deepexi.util.config.JsonDateSerializer"}
2019-03-31 20:57:37.479 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:57:37.521 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:40毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.deepexi.util.config.JsonDateSerializer"}
2019-03-31 20:57:38.285 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 20:57:38.341 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:32毫秒,响应内容:
{"code":"500","msg":"Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class com.deepexi.util.config.JsonDateSerializer"}
2019-03-31 20:58:32.363 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$624dad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:58:33.181 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 20:58:34.367 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 20:58:34.625 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:58:34.636 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$39e7659] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:58:34.693 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$624dad33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 20:58:35.392 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 20:58:35.417 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 20:58:35.418 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 20:58:35.432 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 20:58:35.619 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 20:58:35.620 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2419 ms
2019-03-31 20:58:35.647 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 20:58:35.789 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 20:58:35.790 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 20:58:35.790 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 20:58:35.790 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 20:58:35.793 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 20:58:35.793 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 20:58:36.933 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 20:58:36.993 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:58:36.996 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:58:37.002 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 20:58:37.005 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 20:58:37.392 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 20:58:39.506 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 20:58:39.548 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 20:58:39.726 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 20:58:39.726 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 20:58:39.867 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 20:58:39.867 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 20:58:40.142 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 20:58:40.576 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 20:58:40.577 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 20:58:40.577 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 20:58:40.579 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 20:58:40.579 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 20:58:40.582 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 20:58:40.582 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 20:58:40.913 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 20:58:40.916 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 20:58:40.922 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 20:58:40.927 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554037120925 with initial instances count: 2
2019-03-31 20:58:40.935 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 20:58:40.935 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554037120935, current=UP, previous=STARTING]
2019-03-31 20:58:40.938 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 20:58:40.944 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 20:58:40.956 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 20:58:40.986 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 20:58:41.010 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 20:58:41.240 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 20:58:41.244 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.674 seconds (JVM running for 14.53)
2019-03-31 21:01:20.886 INFO  [nio-8080-exec-9] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 21:01:20.887 INFO  [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 21:01:20.949 INFO  [nio-8080-exec-9] o.s.web.servlet.DispatcherServlet: - Completed initialization in 61 ms
2019-03-31 21:01:21.261 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 21:01:21.497 INFO  [nio-8080-exec-9] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:01:21.510 INFO  [nio-8080-exec-9] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 21:01:21.516 INFO  [nio-8080-exec-9] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 21:01:21.522 INFO  [nio-8080-exec-9] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 21:01:21.539 INFO  [nio-8080-exec-9] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:01:21.543 INFO  [nio-8080-exec-9] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@733d6a0a
2019-03-31 21:01:22.528 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:01:22.798 ERROR [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [com.deepexi.util.config.Payload<com.deepexi.b.page.PageFegin<com.deepexi.b.domain.eo.Product>>] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2019-03-31 00:00:00": not a valid representation (error: Failed to parse Date value '2019-03-31 00:00:00': Cannot parse date "2019-03-31 00:00:00": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null)); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "2019-03-31 00:00:00": not a valid representation (error: Failed to parse Date value '2019-03-31 00:00:00': Cannot parse date "2019-03-31 00:00:00": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null))
 at [Source: (PushbackInputStream); line: 1, column: 132] (through reference chain: com.deepexi.util.config.Payload["payload"]->com.deepexi.b.page.PageFegin["content"]->java.util.ArrayList[0]->com.deepexi.b.domain.eo.Product["updatedAt"])
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$4643f90e.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [com.deepexi.util.config.Payload<com.deepexi.b.page.PageFegin<com.deepexi.b.domain.eo.Product>>] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2019-03-31 00:00:00": not a valid representation (error: Failed to parse Date value '2019-03-31 00:00:00': Cannot parse date "2019-03-31 00:00:00": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null)); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "2019-03-31 00:00:00": not a valid representation (error: Failed to parse Date value '2019-03-31 00:00:00': Cannot parse date "2019-03-31 00:00:00": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null))
 at [Source: (PushbackInputStream); line: 1, column: 132] (through reference chain: com.deepexi.util.config.Payload["payload"]->com.deepexi.b.page.PageFegin["content"]->java.util.ArrayList[0]->com.deepexi.b.domain.eo.Product["updatedAt"])
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.Date` from String "2019-03-31 00:00:00": not a valid representation (error: Failed to parse Date value '2019-03-31 00:00:00': Cannot parse date "2019-03-31 00:00:00": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null)); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "2019-03-31 00:00:00": not a valid representation (error: Failed to parse Date value '2019-03-31 00:00:00': Cannot parse date "2019-03-31 00:00:00": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null))
 at [Source: (PushbackInputStream); line: 1, column: 132] (through reference chain: com.deepexi.util.config.Payload["payload"]->com.deepexi.b.page.PageFegin["content"]->java.util.ArrayList[0]->com.deepexi.b.domain.eo.Product["updatedAt"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String "2019-03-31 00:00:00": not a valid representation (error: Failed to parse Date value '2019-03-31 00:00:00': Cannot parse date "2019-03-31 00:00:00": while it seems to fit format 'yyyy-MM-dd'T'HH:mm:ss.SSSZ', parsing fails (leniency? null))
 at [Source: (PushbackInputStream); line: 1, column: 132] (through reference chain: com.deepexi.util.config.Payload["payload"]->com.deepexi.b.page.PageFegin["content"]->java.util.ArrayList[0]->com.deepexi.b.domain.eo.Product["updatedAt"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1549)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:911)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(StdDeserializer.java:524)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(StdDeserializer.java:467)
	at com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer._parseDate(DateDeserializers.java:195)
	at com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer.deserialize(DateDeserializers.java:285)
	at com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer.deserialize(DateDeserializers.java:268)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:369)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:286)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:369)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:369)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 21:01:22.803 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1538毫秒,响应内容:
{}
2019-03-31 21:11:22.917 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d0d35aae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:11:24.392 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 21:11:26.246 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 21:11:26.595 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:11:26.610 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$722423d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:11:26.659 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d0d35aae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:11:27.593 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 21:11:27.647 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 21:11:27.650 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 21:11:27.679 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 21:11:27.938 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 21:11:27.938 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3517 ms
2019-03-31 21:11:27.968 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 21:11:28.170 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 21:11:28.171 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 21:11:28.172 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 21:11:28.172 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 21:11:28.176 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 21:11:28.176 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 21:11:29.314 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 21:11:29.369 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:11:29.372 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:11:29.378 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:11:29.381 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:11:29.729 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 21:11:31.825 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 21:11:31.870 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 21:11:32.041 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 21:11:32.041 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 21:11:32.175 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 21:11:32.176 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 21:11:32.447 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 21:11:32.923 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:11:32.924 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:11:32.924 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:11:32.926 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:11:32.927 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:11:32.929 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 21:11:32.930 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:11:33.188 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:11:33.190 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 21:11:33.197 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 21:11:33.201 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554037893200 with initial instances count: 0
2019-03-31 21:11:33.211 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 21:11:33.212 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554037893212, current=UP, previous=STARTING]
2019-03-31 21:11:33.215 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 21:11:33.221 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 21:11:33.235 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 21:11:33.293 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 21:11:33.295 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 21:11:33.504 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 21:11:33.509 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 15.722 seconds (JVM running for 19.213)
2019-03-31 21:12:03.190 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:12:03.191 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:12:03.191 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:12:03.196 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:12:03.196 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:12:03.199 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 21:12:03.199 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:12:03.246 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:12:29.193 INFO  [nio-8080-exec-3] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 21:12:29.195 INFO  [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 21:12:29.242 INFO  [nio-8080-exec-3] o.s.web.servlet.DispatcherServlet: - Completed initialization in 46 ms
2019-03-31 21:12:29.530 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 21:12:29.815 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:12:29.829 INFO  [nio-8080-exec-3] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 21:12:29.833 INFO  [nio-8080-exec-3] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 21:12:29.839 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 21:12:29.856 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:12:29.863 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5a057c3e
2019-03-31 21:12:30.545 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:902毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"code":"500","msg":"Request method 'POST' not supported"}}
2019-03-31 21:12:30.844 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:12:32.247 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 21:12:32.268 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:15毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"code":"500","msg":"Request method 'POST' not supported"}}
2019-03-31 21:12:35.059 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,2,20]
2019-03-31 21:12:35.568 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:479毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"柚子","price":291}],"total":0,"pageNo":0,"pageSize":0,"first":true,"contentSize":2,"totalPage":1}}
2019-03-31 21:12:54.482 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:12:54.555 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:55毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"小番茄","price":200},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"contentSize":9,"totalPage":1}}
2019-03-31 21:13:33.995 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:13:34.082 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:74毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-31 08:00:00","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 08:00:00","dr":0,"name":"小番茄","price":200},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"contentSize":9,"totalPage":1}}
2019-03-31 21:14:58.664 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$acb146b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:14:59.636 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 21:15:01.017 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=2eb29888-3c31-3d46-bed8-778e092713ed
2019-03-31 21:15:01.335 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:15:01.345 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$4e020fda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:15:01.377 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$acb146b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:15:02.095 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 21:15:02.118 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 21:15:02.119 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 21:15:02.131 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 21:15:02.304 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 21:15:02.305 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2643 ms
2019-03-31 21:15:02.328 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 21:15:02.465 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 21:15:02.466 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 21:15:02.466 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 21:15:02.466 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 21:15:02.469 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 21:15:02.469 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 21:15:03.610 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 21:15:03.668 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:15:03.670 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:15:03.676 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:15:03.679 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:15:04.072 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 21:15:06.112 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 21:15:06.153 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 21:15:06.320 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 21:15:06.321 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 21:15:06.453 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 21:15:06.453 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 21:15:06.726 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 21:15:07.160 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:15:07.161 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:15:07.161 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:15:07.165 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:15:07.165 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:15:07.168 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 21:15:07.168 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:15:07.491 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:15:07.495 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 21:15:07.500 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 21:15:07.504 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554038107503 with initial instances count: 2
2019-03-31 21:15:07.513 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 21:15:07.514 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554038107514, current=UP, previous=STARTING]
2019-03-31 21:15:07.517 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 21:15:07.523 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 21:15:07.537 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 21:15:07.564 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 21:15:07.590 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 21:15:07.856 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 21:15:07.860 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 11.008 seconds (JVM running for 14.461)
2019-03-31 21:16:25.334 INFO  [nio-8080-exec-5] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 21:16:25.336 INFO  [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 21:16:25.392 INFO  [nio-8080-exec-5] o.s.web.servlet.DispatcherServlet: - Completed initialization in 55 ms
2019-03-31 21:16:25.866 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:16:26.136 INFO  [nio-8080-exec-5] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:16:26.150 INFO  [nio-8080-exec-5] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 21:16:26.156 INFO  [nio-8080-exec-5] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 21:16:26.163 INFO  [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 21:16:26.180 INFO  [nio-8080-exec-5] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:16:26.184 INFO  [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@57b063e7
2019-03-31 21:16:26.577 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:593毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"小番茄","price":200},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"contentSize":9,"totalPage":1}}
2019-03-31 21:16:27.167 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:16:32.625 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 21:16:32.654 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:24毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"code":"500","msg":"Request method 'POST' not supported"}}
2019-03-31 21:27:10.407 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2a67c2bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:27:11.747 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 21:27:12.719 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 21:27:12.982 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 21:27:12.994 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 21:27:13.038 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 21:30:05.777 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2533270b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:30:06.663 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 21:30:07.658 WARN  [main] o.m.s.mapper.ClassPathMapperScanner: - No MyBatis mapper was found in '[com.deepexi.b]' package. Please check your configuration.
2019-03-31 21:30:07.908 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext: - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'dataSource' defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Cannot register bean definition [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] for bean 'dataSource': There is already [Root bean: class [null]; scope=refresh; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] bound.
2019-03-31 21:30:07.919 INFO  [main] o.s.b.a.l.ConditionEvaluationReportLoggingListener: - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-31 21:30:07.933 ERROR [main] o.s.b.d.LoggingFailureAnalysisReporter: - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'dataSource', defined in BeanDefinition defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2019-03-31 21:31:49.899 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7b950ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:31:50.723 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 21:31:51.912 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 21:31:52.213 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:31:52.226 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$a90a1a12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:31:52.269 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7b950ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:31:53.020 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 21:31:53.043 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 21:31:53.046 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 21:31:53.058 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 21:31:53.248 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 21:31:53.250 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2501 ms
2019-03-31 21:31:53.277 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 21:31:53.429 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 21:31:53.429 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 21:31:53.429 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 21:31:53.430 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 21:31:53.432 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 21:31:53.433 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 21:31:54.585 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 21:31:54.650 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:31:54.652 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:31:54.658 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:31:54.661 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:31:55.075 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 21:31:57.273 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 21:31:57.313 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 21:31:57.485 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 21:31:57.486 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 21:31:57.624 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 21:31:57.625 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 21:31:57.892 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 21:31:58.318 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:31:58.319 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:31:58.320 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:31:58.322 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:31:58.323 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:31:58.325 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 21:31:58.325 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:31:58.592 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:31:58.594 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 21:31:58.600 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 21:31:58.605 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554039118603 with initial instances count: 0
2019-03-31 21:31:58.616 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 21:31:58.617 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554039118617, current=UP, previous=STARTING]
2019-03-31 21:31:58.660 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 21:31:58.661 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 21:31:58.678 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 21:31:58.738 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 21:31:58.744 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 21:31:58.977 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 21:31:58.981 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.884 seconds (JVM running for 14.3)
2019-03-31 21:32:28.595 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:32:28.597 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:32:28.597 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:32:28.600 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:32:28.601 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:32:28.604 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 21:32:28.605 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:32:28.656 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:33:00.540 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 21:33:00.549 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 21:33:00.596 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 46 ms
2019-03-31 21:33:00.876 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 21:33:01.154 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:33:01.168 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 21:33:01.176 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 21:33:01.182 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 21:33:01.190 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@727dd76e
2019-03-31 21:33:01.265 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductById(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductById(ProductController.java:53)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$81e13085.getProductById(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:33:01.272 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:391毫秒,响应内容:
{}
2019-03-31 21:33:05.672 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:33:05.679 ERROR [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$81e13085.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:33:05.691 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:13毫秒,响应内容:
{}
2019-03-31 21:33:10.632 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:33:10.640 ERROR [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$81e13085.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:33:10.649 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:11毫秒,响应内容:
{}
2019-03-31 21:33:12.117 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:33:12.121 ERROR [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$81e13085.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:33:12.137 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:18毫秒,响应内容:
{}
2019-03-31 21:33:28.974 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:33:28.986 ERROR [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$81e13085.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:33:28.998 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:14毫秒,响应内容:
{}
2019-03-31 21:33:30.931 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:33:30.952 ERROR [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$81e13085.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:33:30.963 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:12毫秒,响应内容:
{}
2019-03-31 21:33:31.912 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:33:31.921 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:45)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$81e13085.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:33:31.928 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:10毫秒,响应内容:
{}
2019-03-31 21:33:32.201 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:33:32.732 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:33:34.068 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:900毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"小番茄","price":200},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":9}}
2019-03-31 21:37:17.162 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$db9f2325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:37:17.974 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 21:37:19.409 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 21:37:19.695 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:37:19.705 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$7cefec4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:37:19.760 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$db9f2325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:37:20.645 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 21:37:20.681 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 21:37:20.685 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 21:37:20.699 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 21:37:20.970 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 21:37:20.970 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2977 ms
2019-03-31 21:37:21.012 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 21:37:21.215 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 21:37:21.216 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 21:37:21.216 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 21:37:21.216 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 21:37:21.220 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 21:37:21.221 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 21:37:22.959 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 21:37:23.053 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:37:23.055 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:37:23.062 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:37:23.065 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:37:23.626 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 21:37:26.303 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 21:37:26.358 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 21:37:26.592 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 21:37:26.593 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 21:37:26.782 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 21:37:26.782 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 21:37:27.174 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 21:37:27.688 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:37:27.689 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:37:27.690 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:37:27.693 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:37:27.693 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:37:27.696 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 21:37:27.696 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:37:28.134 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:37:28.138 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 21:37:28.145 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 21:37:28.151 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554039448149 with initial instances count: 2
2019-03-31 21:37:28.163 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 21:37:28.163 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554039448163, current=UP, previous=STARTING]
2019-03-31 21:37:28.166 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 21:37:28.172 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 21:37:28.191 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 21:37:28.268 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 21:37:28.296 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 21:37:28.611 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 21:37:28.617 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 13.168 seconds (JVM running for 16.938)
2019-03-31 21:39:04.808 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 21:39:04.809 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 21:39:04.855 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 45 ms
2019-03-31 21:39:05.161 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:39:05.408 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:39:05.421 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 21:39:05.427 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 21:39:05.433 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 21:39:05.450 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:39:05.456 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@118cef3
2019-03-31 21:39:06.401 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Type definition error: [simple type, class com.deepexi.util.pageHelper.PageBean]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 13] (through reference chain: com.deepexi.util.config.Payload["payload"])
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:46)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$9a73f80b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class com.deepexi.util.pageHelper.PageBean]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 13] (through reference chain: com.deepexi.util.config.Payload["payload"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:242)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 13] (through reference chain: com.deepexi.util.config.Payload["payload"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1452)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1028)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1297)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:369)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 21:39:06.411 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:1246毫秒,响应内容:
{}
2019-03-31 21:39:06.438 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:39:14.866 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 21:39:14.911 ERROR [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Type definition error: [simple type, class com.deepexi.util.pageHelper.PageBean]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 13] (through reference chain: com.deepexi.util.config.Payload["payload"])
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy117.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:46)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$9a73f80b.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class com.deepexi.util.pageHelper.PageBean]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 13] (through reference chain: com.deepexi.util.config.Payload["payload"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:242)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.deepexi.util.pageHelper.PageBean` (no Creators, like default construct, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (PushbackInputStream); line: 1, column: 13] (through reference chain: com.deepexi.util.config.Payload["payload"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1452)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1028)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1297)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:127)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:369)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 21:39:14.919 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:51毫秒,响应内容:
{}
2019-03-31 21:39:19.252 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 21:39:19.409 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:44毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"code":"500","msg":"Request method 'POST' not supported"}}
2019-03-31 21:44:09.774 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8434ee08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:44:11.556 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 21:44:13.898 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 21:44:14.468 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:44:14.487 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$2585b72e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:44:14.560 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8434ee08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 21:44:16.658 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 21:44:16.718 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 21:44:16.728 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 21:44:16.749 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 21:44:17.166 INFO  [main] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring embedded WebApplicationContext
2019-03-31 21:44:17.167 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 5578 ms
2019-03-31 21:44:17.202 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 21:44:17.406 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 21:44:17.407 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 21:44:17.407 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 21:44:17.408 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 21:44:17.412 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 21:44:17.412 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 21:44:19.513 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 21:44:19.611 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:44:19.619 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:44:19.629 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 21:44:19.632 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 21:44:20.278 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 21:44:22.986 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 21:44:23.028 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 21:44:23.203 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 21:44:23.203 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 21:44:23.338 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 21:44:23.338 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 21:44:23.598 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 21:44:24.029 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:44:24.031 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:44:24.031 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:44:24.034 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:44:24.034 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:44:24.036 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 21:44:24.037 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:44:24.292 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:44:24.294 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 21:44:24.299 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 21:44:24.304 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554039864303 with initial instances count: 0
2019-03-31 21:44:24.314 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 21:44:24.315 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554039864315, current=UP, previous=STARTING]
2019-03-31 21:44:24.318 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 21:44:24.327 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 21:44:24.341 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 21:44:24.399 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 21:44:24.408 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 21:44:24.624 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path '/deepexi-service-b'
2019-03-31 21:44:24.629 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 18.825 seconds (JVM running for 22.237)
2019-03-31 21:44:54.295 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 21:44:54.296 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 21:44:54.296 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 21:44:54.300 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 21:44:54.301 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 21:44:54.303 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 21:44:54.303 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 21:44:54.351 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 21:45:09.495 INFO  [nio-8080-exec-4] o.a.c.c.C.[.[.[/deepexi-service-b]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 21:45:09.496 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 21:45:09.553 INFO  [nio-8080-exec-4] o.s.web.servlet.DispatcherServlet: - Completed initialization in 56 ms
2019-03-31 21:45:09.868 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 21:45:10.161 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:45:10.174 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 21:45:10.179 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 21:45:10.185 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 21:45:10.191 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@14914916
2019-03-31 21:45:10.260 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.getProductById(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductById(ProductController.java:54)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$8023a2c0.getProductById(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 21:45:10.268 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:396毫秒,响应内容:
{}
2019-03-31 21:45:41.200 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 21:46:15.168 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 21:46:16.087 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:786毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"payload":{"id":"1","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"苹果","price":20},"code":"0","msg":"ok"}}
2019-03-31 21:46:22.861 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["2"]
2019-03-31 21:46:22.896 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:31毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"payload":{"id":"2","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"梨","price":10},"code":"0","msg":"ok"}}
2019-03-31 22:13:32.153 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e118333] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:13:33.132 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 22:13:34.535 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 22:13:34.792 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:13:34.803 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$df624c59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:13:34.834 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3e118333] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:13:35.690 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 22:13:35.729 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 22:13:35.733 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 22:13:35.750 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 22:13:35.976 INFO  [main] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring embedded WebApplicationContext
2019-03-31 22:13:35.976 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2816 ms
2019-03-31 22:13:36.005 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 22:13:36.150 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 22:13:36.151 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 22:13:36.151 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 22:13:36.151 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 22:13:36.158 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 22:13:36.159 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 22:13:37.490 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 22:13:37.563 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:13:37.565 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:13:37.572 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:13:37.575 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:13:37.990 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 22:13:40.276 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 22:13:40.327 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 22:13:40.523 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 22:13:40.524 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 22:13:40.699 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 22:13:40.699 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 22:13:41.095 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:13:41.551 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 22:13:41.554 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 22:13:41.554 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 22:13:41.557 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 22:13:41.558 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 22:13:41.561 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 22:13:41.561 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 22:13:41.829 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 22:13:41.831 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 22:13:41.839 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 22:13:41.844 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554041621842 with initial instances count: 0
2019-03-31 22:13:41.855 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 22:13:41.856 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554041621856, current=UP, previous=STARTING]
2019-03-31 22:13:41.859 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 22:13:41.864 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 22:13:41.882 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 22:13:41.972 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 22:13:41.972 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 22:13:42.247 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path ''
2019-03-31 22:13:42.251 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 12.052 seconds (JVM running for 16.631)
2019-03-31 22:13:42.719 INFO  [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 22:13:42.720 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 22:13:42.756 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 36 ms
2019-03-31 22:14:11.833 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 22:14:11.835 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 22:14:11.837 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 22:14:11.837 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 22:14:11.837 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 22:14:11.838 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 22:14:11.842 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 22:14:11.892 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 22:14:23.163 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 22:14:23.473 INFO  [nio-8080-exec-9] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:14:23.489 INFO  [nio-8080-exec-9] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 22:14:23.494 INFO  [nio-8080-exec-9] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 22:14:23.506 INFO  [nio-8080-exec-9] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 22:14:23.511 INFO  [nio-8080-exec-9] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5df16a53
2019-03-31 22:14:23.590 ERROR [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:47)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$e48dbe8a.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 22:14:23.598 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:429毫秒,响应内容:
{}
2019-03-31 22:14:47.107 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 22:14:47.111 ERROR [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.getProductList(Unknown Source)
	at com.deepexi.b.controller.ProductController.getProductList(ProductController.java:47)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$e48dbe8a.getProductList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: deepexi-service-a-provider
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 80 common frames omitted
2019-03-31 22:14:47.123 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:14毫秒,响应内容:
{}
2019-03-31 22:14:54.524 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:15:04.220 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 22:15:05.520 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:903毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"小番茄","price":200},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":9}}
2019-03-31 22:15:10.041 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 22:15:10.129 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:66毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"小番茄","price":200},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":9}}
2019-03-31 22:15:18.142 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["10"]
2019-03-31 22:15:18.205 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:52毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990}}
2019-03-31 22:16:13.575 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"dr":0,"id":"11","name":"香蕉","price":500,"updatedAt":1553961600000}]
2019-03-31 22:16:13.632 ERROR [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.createProduct(Unknown Source)
	at com.deepexi.b.controller.ProductController.createProduct(ProductController.java:57)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$e48dbe8a.createProduct(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer._parseInteger(NumberDeserializers.java:531)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:474)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:452)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 22:16:13.640 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:59毫秒,响应内容:
{}
2019-03-31 22:18:00.294 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["10"]
2019-03-31 22:18:00.339 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:43毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990}}
2019-03-31 22:18:41.564 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:19:06.829 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"dr":0,"id":"11","name":"香蕉","price":500,"updatedAt":1553961600000}]
2019-03-31 22:19:06.841 ERROR [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.createProduct(Unknown Source)
	at com.deepexi.b.controller.ProductController.createProduct(ProductController.java:57)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$e48dbe8a.createProduct(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer._parseInteger(NumberDeserializers.java:531)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:474)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:452)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 22:19:06.850 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:20毫秒,响应内容:
{}
2019-03-31 22:20:59.320 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"dr":0,"id":"13","name":"香蕉","price":500,"updatedAt":1553961600000}]
2019-03-31 22:20:59.333 ERROR [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.createProduct(Unknown Source)
	at com.deepexi.b.controller.ProductController.createProduct(ProductController.java:57)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$e48dbe8a.createProduct(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer._parseInteger(NumberDeserializers.java:531)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:474)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:452)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 22:20:59.335 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:14毫秒,响应内容:
{}
2019-03-31 22:21:46.658 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"createdBy":"","dr":0,"id":"13","name":"香蕉","price":500,"tenantId":"","updatedAt":1553961600000,"updatedBy":""}]
2019-03-31 22:21:46.683 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.createProduct(Unknown Source)
	at com.deepexi.b.controller.ProductController.createProduct(ProductController.java:57)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$e48dbe8a.createProduct(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer._parseInteger(NumberDeserializers.java:531)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:474)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:452)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 22:21:46.701 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:28毫秒,响应内容:
{}
2019-03-31 22:23:41.569 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:28:41.571 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:32:43.741 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:32:45.276 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 22:32:47.224 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 22:32:47.614 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:32:47.631 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$22792eb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:32:47.673 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8128658c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:32:48.625 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 22:32:48.664 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 22:32:48.665 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 22:32:48.681 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 22:32:48.923 INFO  [main] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring embedded WebApplicationContext
2019-03-31 22:32:48.923 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 3618 ms
2019-03-31 22:32:48.961 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 22:32:49.170 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 22:32:49.171 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 22:32:49.172 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 22:32:49.172 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 22:32:49.175 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 22:32:49.176 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 22:32:50.576 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 22:32:50.635 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:32:50.638 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:32:50.644 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:32:50.646 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:32:51.047 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 22:32:53.232 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 22:32:53.273 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 22:32:53.443 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 22:32:53.443 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 22:32:53.573 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 22:32:53.574 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 22:32:53.837 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:32:54.270 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 22:32:54.271 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 22:32:54.271 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 22:32:54.274 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 22:32:54.274 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 22:32:54.278 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 22:32:54.278 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 22:32:54.642 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 22:32:54.646 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 22:32:54.651 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 22:32:54.656 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554042774654 with initial instances count: 2
2019-03-31 22:32:54.664 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 22:32:54.665 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554042774665, current=UP, previous=STARTING]
2019-03-31 22:32:54.668 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 22:32:54.675 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 22:32:54.690 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 22:32:54.722 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 22:32:54.749 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 22:32:54.970 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path ''
2019-03-31 22:32:54.974 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 16.032 seconds (JVM running for 19.501)
2019-03-31 22:32:56.118 INFO  [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 22:32:56.120 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 22:32:56.151 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 31 ms
2019-03-31 22:33:43.058 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"createdBy":"","dr":0,"id":"13","name":"香蕉","price":500,"tenantId":"","updatedAt":1553961600000,"updatedBy":""}]
2019-03-31 22:33:43.339 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:33:43.357 INFO  [nio-8080-exec-4] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 22:33:43.365 INFO  [nio-8080-exec-4] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 22:33:43.375 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 22:33:43.394 INFO  [nio-8080-exec-4] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:33:43.399 INFO  [nio-8080-exec-4] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2b318f26
2019-03-31 22:33:44.381 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:33:44.416 ERROR [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.createProduct(Unknown Source)
	at com.deepexi.b.controller.ProductController.createProduct(ProductController.java:57)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$eaabe891.createProduct(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer._parseInteger(NumberDeserializers.java:531)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:474)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:452)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 22:33:44.423 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:1357毫秒,响应内容:
{}
2019-03-31 22:34:32.725 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 22:34:33.452 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:253毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"小番茄","price":200},{"id":"13","tenantId":"","createdBy":"","createdAt":"2019-03-31 00:00:00","updatedBy":"","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"香蕉","price":500},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":10}}
2019-03-31 22:34:38.801 INFO  [io-8080-exec-10] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["10"]
2019-03-31 22:34:38.863 INFO  [io-8080-exec-10] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:44毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990}}
2019-03-31 22:35:20.402 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"createdBy":"","dr":0,"id":"13","name":"香蕉","price":500,"tenantId":"","updatedAt":1553961600000,"updatedBy":""}]
2019-03-31 22:35:20.633 ERROR [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.createProduct(Unknown Source)
	at com.deepexi.b.controller.ProductController.createProduct(ProductController.java:57)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$eaabe891.createProduct(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer._parseInteger(NumberDeserializers.java:531)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:474)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:452)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 22:35:20.641 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:238毫秒,响应内容:
{}
2019-03-31 22:36:34.695 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 22:36:34.764 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:60毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-31 00:00:00","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"小番茄","price":200},{"id":"13","tenantId":"","createdBy":"","createdAt":"2019-03-31 00:00:00","updatedBy":"","updatedAt":"2019-03-31 00:00:00","dr":0,"name":"香蕉","price":500},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"totalPage":1,"contentSize":10}}
2019-03-31 22:37:49.727 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"createdBy":"","dr":0,"id":"14","name":"香蕉","price":5,"tenantId":"","updatedAt":1553961600000,"updatedBy":""}]
2019-03-31 22:37:49.830 ERROR [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 
feign.codec.DecodeException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:169)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:133)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy115.createProduct(Unknown Source)
	at com.deepexi.b.controller.ProductController.createProduct(ProductController.java:57)
	at com.deepexi.b.controller.ProductController$$FastClassBySpringCGLIB$$68aa63d6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.deepexi.b.aop.LogAspect.aroundApi(LogAspect.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.deepexi.b.controller.ProductController$$EnhancerBySpringCGLIB$$eaabe891.createProduct(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:215)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:142)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:901)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.csp.sentinel.adapter.servlet.CommonFilter.doFilter(CommonFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.web.client.RestClientException: Error while extracting response for type [class java.lang.Integer] and content type [application/json;charset=UTF-8]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:117)
	at org.springframework.cloud.openfeign.support.SpringDecoder.decode(SpringDecoder.java:60)
	at org.springframework.cloud.openfeign.support.ResponseEntityDecoder.decode(ResponseEntityDecoder.java:45)
	at feign.optionals.OptionalDecoder.decode(OptionalDecoder.java:23)
	at feign.SynchronousMethodHandler.decode(SynchronousMethodHandler.java:165)
	... 80 common frames omitted
Caused by: org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:245)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:227)
	at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:102)
	... 84 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.Integer` out of START_OBJECT token
 at [Source: (PushbackInputStream); line: 1, column: 1]
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer._parseInteger(NumberDeserializers.java:531)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:474)
	at com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.deserialize(NumberDeserializers.java:452)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3084)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:239)
	... 86 common frames omitted
2019-03-31 22:37:49.831 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:95毫秒,响应内容:
{}
2019-03-31 22:37:54.281 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:40:17.350 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$38eb21ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:40:18.153 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 22:40:19.362 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 22:40:19.606 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:40:19.618 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$da3beb25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:40:19.652 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$38eb21ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:40:20.410 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 22:40:20.432 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 22:40:20.435 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 22:40:20.446 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 22:40:20.633 INFO  [main] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring embedded WebApplicationContext
2019-03-31 22:40:20.635 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2461 ms
2019-03-31 22:40:20.664 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 22:40:20.813 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 22:40:20.814 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 22:40:20.814 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 22:40:20.814 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 22:40:20.817 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 22:40:20.817 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 22:40:22.010 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 22:40:22.070 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:40:22.073 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:40:22.079 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:40:22.082 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:40:22.492 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 22:40:24.670 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 22:40:24.714 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 22:40:24.896 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 22:40:24.897 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 22:40:25.029 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 22:40:25.029 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 22:40:25.298 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:40:25.726 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 22:40:25.727 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 22:40:25.727 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 22:40:25.729 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 22:40:25.730 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 22:40:25.733 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 22:40:25.734 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 22:40:26.063 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 22:40:26.066 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 22:40:26.072 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 22:40:26.077 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554043226075 with initial instances count: 2
2019-03-31 22:40:26.087 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 22:40:26.087 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554043226087, current=UP, previous=STARTING]
2019-03-31 22:40:26.090 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 22:40:26.097 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 22:40:26.111 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 22:40:26.148 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 22:40:26.171 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 22:40:26.418 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path ''
2019-03-31 22:40:26.423 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 10.866 seconds (JVM running for 15.154)
2019-03-31 22:40:27.879 INFO  [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 22:40:27.881 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 22:40:27.915 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 34 ms
2019-03-31 22:42:46.695 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"createdBy":"","dr":0,"id":"15","name":"香蕉","price":5,"tenantId":"","updatedAt":1553961600000,"updatedBy":""}]
2019-03-31 22:42:47.063 INFO  [nio-8080-exec-5] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:42:47.105 INFO  [nio-8080-exec-5] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 22:42:47.126 INFO  [nio-8080-exec-5] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 22:42:47.147 INFO  [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 22:42:47.178 INFO  [nio-8080-exec-5] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:42:47.183 INFO  [nio-8080-exec-5] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2fb5b9aa
2019-03-31 22:42:48.470 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:42:48.495 INFO  [nio-8080-exec-5] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:1368毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"payload":1,"code":"0","msg":"ok"}}
2019-03-31 22:43:52.143 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.deleteProductById() start =====,参数:
["1"]
2019-03-31 22:43:52.230 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.deleteProductById() end =====,响应时间:83毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"payload":true,"code":"0","msg":"ok"}}
2019-03-31 22:45:25.737 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:45:49.783 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c29fd94c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:45:52.556 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 22:45:54.789 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 22:45:55.183 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:45:55.197 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$63f0a272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:45:55.246 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c29fd94c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 22:45:56.362 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 22:45:56.403 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 22:45:56.406 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 22:45:56.425 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 22:45:56.681 INFO  [main] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring embedded WebApplicationContext
2019-03-31 22:45:56.682 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 4089 ms
2019-03-31 22:45:56.723 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 22:45:56.943 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 22:45:56.944 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 22:45:56.944 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 22:45:56.945 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 22:45:56.952 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 22:45:56.952 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 22:45:58.496 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 22:45:58.563 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:45:58.566 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:45:58.573 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 22:45:58.575 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 22:45:59.010 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 22:46:02.177 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 22:46:02.298 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 22:46:02.529 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 22:46:02.531 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 22:46:02.672 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 22:46:02.672 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 22:46:02.957 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:46:03.399 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 22:46:03.400 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 22:46:03.400 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 22:46:03.403 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 22:46:03.403 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 22:46:03.405 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 22:46:03.406 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 22:46:03.811 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 22:46:03.815 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 22:46:03.820 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 22:46:03.824 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554043563823 with initial instances count: 2
2019-03-31 22:46:03.837 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 22:46:03.837 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554043563837, current=UP, previous=STARTING]
2019-03-31 22:46:03.840 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 22:46:03.847 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 22:46:03.868 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 22:46:03.903 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 22:46:03.933 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 22:46:04.193 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path ''
2019-03-31 22:46:04.197 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 19.043 seconds (JVM running for 24.505)
2019-03-31 22:46:04.655 INFO  [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 22:46:04.655 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 22:46:04.688 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 33 ms
2019-03-31 22:46:50.716 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.deleteProductById() start =====,参数:
["1"]
2019-03-31 22:46:51.068 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:46:51.080 INFO  [nio-8080-exec-3] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 22:46:51.086 INFO  [nio-8080-exec-3] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 22:46:51.092 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 22:46:51.108 INFO  [nio-8080-exec-3] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:46:51.113 INFO  [nio-8080-exec-3] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6aad3fb7
2019-03-31 22:46:51.927 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.deleteProductById() end =====,响应时间:1112毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"payload":true,"code":"0","msg":"ok"}}
2019-03-31 22:46:52.192 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 22:51:03.407 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 22:56:03.410 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:01:03.413 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:06:03.415 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:11:03.418 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:16:03.420 INFO  [trap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:36:59.928 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34ae9c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:37:00.923 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 23:37:02.319 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 23:37:02.613 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:37:02.624 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$a49bb2ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:37:02.659 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$34ae9c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:37:03.439 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 23:37:03.463 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 23:37:03.466 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 23:37:03.477 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 23:37:03.661 INFO  [main] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring embedded WebApplicationContext
2019-03-31 23:37:03.662 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2709 ms
2019-03-31 23:37:03.691 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 23:37:03.855 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 23:37:03.855 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 23:37:03.855 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 23:37:03.855 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 23:37:03.858 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 23:37:03.859 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 23:37:05.058 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 23:37:05.128 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 23:37:05.131 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 23:37:05.137 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 23:37:05.140 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 23:37:05.637 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 23:37:08.154 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 23:37:08.240 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 23:37:08.501 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 23:37:08.502 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 23:37:08.662 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 23:37:08.662 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 23:37:08.951 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:37:09.412 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 23:37:09.414 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 23:37:09.414 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 23:37:09.416 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 23:37:09.416 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 23:37:09.419 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 23:37:09.420 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 23:37:09.869 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 23:37:09.872 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 23:37:09.879 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 23:37:09.884 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554046629882 with initial instances count: 1
2019-03-31 23:37:09.898 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 23:37:09.899 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554046629899, current=UP, previous=STARTING]
2019-03-31 23:37:09.902 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 23:37:09.910 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 23:37:09.925 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 23:37:09.972 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 23:37:10.011 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 23:37:10.269 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path ''
2019-03-31 23:37:10.273 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 12.262 seconds (JVM running for 15.766)
2019-03-31 23:38:01.666 INFO  [nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 23:38:01.668 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 23:38:01.709 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Completed initialization in 41 ms
2019-03-31 23:38:02.023 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.bathDeleteProduct() start =====,参数:
[["10","11","12"]]
2019-03-31 23:38:02.281 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:38:02.293 INFO  [nio-8080-exec-2] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 23:38:02.298 INFO  [nio-8080-exec-2] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 23:38:02.304 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 23:38:02.321 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:38:02.325 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@fb7c3fa
2019-03-31 23:38:03.309 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:38:04.229 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.bathDeleteProduct() end =====,响应时间:2151毫秒,响应内容:
{"code":"0","msg":"ok","payload":true}
2019-03-31 23:38:25.906 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 23:38:26.352 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:325毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-30 00:00:00","updatedAt":"2019-03-30 00:00:00","dr":1,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-30 00:00:00","dr":1,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-30 00:00:00","dr":1,"name":"小番茄","price":200},{"id":"13","tenantId":"","createdBy":"","createdAt":"2019-03-30 00:00:00","updatedBy":"","updatedAt":"2019-03-30 00:00:00","dr":0,"name":"香蕉","price":500},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"contentSize":10,"totalPage":1}}
2019-03-31 23:38:33.882 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["10"]
2019-03-31 23:38:33.921 INFO  [nio-8080-exec-6] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:37毫秒,响应内容:
{"code":"0","msg":"ok"}
2019-03-31 23:38:45.597 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["1"]
2019-03-31 23:38:45.630 INFO  [nio-8080-exec-8] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:29毫秒,响应内容:
{"code":"0","msg":"ok"}
2019-03-31 23:38:53.689 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() start =====,参数:
["13"]
2019-03-31 23:38:53.713 INFO  [nio-8080-exec-9] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductById() end =====,响应时间:22毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"id":"13","tenantId":"","createdBy":"","createdAt":"2019-03-30 00:00:00","updatedBy":"","updatedAt":"2019-03-30 00:00:00","dr":0,"name":"香蕉","price":500}}
2019-03-31 23:38:59.846 INFO  [io-8080-exec-10] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() start =====,参数:
[1,10,20]
2019-03-31 23:38:59.891 INFO  [io-8080-exec-10] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.getProductList() end =====,响应时间:41毫秒,响应内容:
{"code":"0","msg":"ok","payload":{"content":[{"id":"10","createdAt":"2019-03-30 00:00:00","updatedAt":"2019-03-30 00:00:00","dr":1,"name":"榴莲","price":990},{"id":"11","updatedAt":"2019-03-30 00:00:00","dr":1,"name":"柚子","price":291},{"id":"12","updatedAt":"2019-03-30 00:00:00","dr":1,"name":"小番茄","price":200},{"id":"13","tenantId":"","createdBy":"","createdAt":"2019-03-30 00:00:00","updatedBy":"","updatedAt":"2019-03-30 00:00:00","dr":0,"name":"香蕉","price":500},{"id":"3","dr":0,"name":"桃子","price":123},{"id":"5","dr":0,"name":"猕猴桃","price":50},{"id":"6","dr":0,"name":"桔子","price":33},{"id":"7","dr":0,"name":"菠萝","price":90},{"id":"8","dr":0,"name":"芒果","price":766},{"id":"9","dr":0,"name":"红枣","price":29}],"total":0,"pageNo":0,"pageSize":0,"first":true,"contentSize":10,"totalPage":1}}
2019-03-31 23:39:40.446 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() start =====,参数:
[{"createdAt":1553961600000,"createdBy":"","dr":0,"id":"16","name":"香蕉","price":5,"tenantId":"","updatedAt":1553961600000,"updatedBy":""}]
2019-03-31 23:39:40.592 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.createProduct() end =====,响应时间:145毫秒,响应内容:
{"code":"0","msg":"ok","payload":1}
2019-03-31 23:39:53.729 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.deleteProductById() start =====,参数:
["16"]
2019-03-31 23:39:53.824 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.deleteProductById() end =====,响应时间:94毫秒,响应内容:
{"code":"0","msg":"ok","payload":true}
2019-03-31 23:48:24.244 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ecb658a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:48:25.399 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 23:48:29.065 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 23:48:29.524 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:48:29.546 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$8e0721cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:48:29.680 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ecb658a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:48:31.377 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 23:48:31.440 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 23:48:31.464 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 23:48:31.541 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 23:48:32.018 INFO  [main] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring embedded WebApplicationContext
2019-03-31 23:48:32.019 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 6572 ms
2019-03-31 23:48:32.079 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 23:48:32.971 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 23:48:33.067 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 23:48:33.113 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 23:48:33.113 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 23:48:33.246 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 23:48:33.247 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 23:48:35.933 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 23:48:36.123 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 23:48:36.134 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 23:48:36.150 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 23:48:36.155 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 23:48:37.052 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 23:48:40.053 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 23:48:40.106 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 23:48:40.282 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 23:48:40.283 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 23:48:40.432 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 23:48:40.433 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 23:48:40.710 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:48:41.149 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 23:48:41.150 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 23:48:41.150 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 23:48:41.152 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 23:48:41.152 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 23:48:41.155 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 23:48:41.155 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 23:48:41.412 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 23:48:41.414 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 23:48:41.419 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 23:48:41.424 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554047321422 with initial instances count: 0
2019-03-31 23:48:41.439 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 23:48:41.439 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554047321439, current=UP, previous=STARTING]
2019-03-31 23:48:41.443 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 23:48:41.451 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 23:48:41.466 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 23:48:41.530 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 23:48:41.540 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 23:48:41.775 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path ''
2019-03-31 23:48:41.779 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 20.73 seconds (JVM running for 25.372)
2019-03-31 23:48:42.161 INFO  [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 23:48:42.162 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 23:48:42.194 INFO  [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet: - Completed initialization in 32 ms
2019-03-31 23:49:11.416 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 23:49:11.418 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 23:49:11.423 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 23:49:11.423 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 23:49:11.423 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 23:49:11.423 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Application version is -1: false
2019-03-31 23:49:11.426 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 23:49:11.472 INFO  [freshExecutor-0] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 23:49:46.276 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() start =====,参数:
["1",{"dr":0,"id":"1"}]
2019-03-31 23:49:46.599 INFO  [nio-8080-exec-7] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:49:46.613 INFO  [nio-8080-exec-7] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 23:49:46.619 INFO  [nio-8080-exec-7] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 23:49:46.628 INFO  [nio-8080-exec-7] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 23:49:46.646 INFO  [nio-8080-exec-7] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:49:46.651 INFO  [nio-8080-exec-7] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@54e5e467
2019-03-31 23:49:47.570 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() end =====,响应时间:1234毫秒,响应内容:
{"code":"0","msg":"ok","payload":0}
2019-03-31 23:49:47.632 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:50:36.135 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() start =====,参数:
["13",{"dr":0,"id":"13"}]
2019-03-31 23:50:36.212 INFO  [nio-8080-exec-1] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() end =====,响应时间:73毫秒,响应内容:
{"code":"0","msg":"ok","payload":1}
2019-03-31 23:51:45.625 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() start =====,参数:
["13",{"dr":0,"id":"13"}]
2019-03-31 23:51:45.726 INFO  [nio-8080-exec-7] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() end =====,响应时间:85毫秒,响应内容:
{"code":"0","msg":"ok","payload":1}
2019-03-31 23:52:46.240 INFO  [io-8080-exec-10] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() start =====,参数:
["13",{"dr":0,"id":"13"}]
2019-03-31 23:52:46.359 INFO  [io-8080-exec-10] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() end =====,响应时间:118毫秒,响应内容:
{"code":"0","msg":"ok","payload":1}
2019-03-31 23:53:53.783 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e76a533] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:53:54.606 INFO  [main] com.deepexi.b.ConsumerApplication: - No active profile set, falling back to default profiles: default
2019-03-31 23:53:55.804 INFO  [main] o.s.cloud.context.scope.GenericScope: - BeanFactory id=3cc23113-d27b-332c-b0cd-2fe8a8d79ea1
2019-03-31 23:53:56.069 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'spring.cloud.sentinel-org.springframework.cloud.alibaba.sentinel.SentinelProperties' of type [org.springframework.cloud.alibaba.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:53:56.080 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration' of type [org.springframework.cloud.alibaba.sentinel.custom.SentinelAutoConfiguration$$EnhancerBySpringCGLIB$$1fc76e59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:53:56.112 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker: - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e76a533] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-31 23:53:56.896 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat initialized with port(s): 8080 (http)
2019-03-31 23:53:56.922 INFO  [main] o.a.catalina.core.StandardService: - Starting service [Tomcat]
2019-03-31 23:53:56.925 INFO  [main] o.a.catalina.core.StandardEngine: - Starting Servlet Engine: Apache Tomcat/9.0.12
2019-03-31 23:53:56.936 INFO  [main] o.a.c.core.AprLifecycleListener: - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\jdk1.8.0_92\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;F:\jdk1.8.0_92\bin;F:\jdk1.8.0_92\jre\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;F:\mysql\mysql-5.6.24-win32\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseSVN\bin;F:\nodejs;C:\Users\YL\AppData\Roaming\npm;C:\Program Files\Git\cmd;F:\myeclipse\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;%CXF_HOME%\bin;E:\erlang\erl10.3\bin;C:\Users\YL\AppData\Local\Microsoft\WindowsApps;;C:\Users\YL\AppData\Local\Programs\Fiddler;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;.]
2019-03-31 23:53:57.126 INFO  [main] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring embedded WebApplicationContext
2019-03-31 23:53:57.127 INFO  [main] o.s.web.context.ContextLoader: - Root WebApplicationContext: initialization completed in 2500 ms
2019-03-31 23:53:57.152 INFO  [main] o.s.c.a.s.SentinelWebAutoConfiguration: - [Sentinel Starter] register Sentinel with urlPatterns: [/*].
2019-03-31 23:53:57.299 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'commonFilter' to urls: [/*]
2019-03-31 23:53:57.300 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-31 23:53:57.300 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-31 23:53:57.300 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'formContentFilter' to: [/*]
2019-03-31 23:53:57.302 INFO  [main] o.s.b.w.s.FilterRegistrationBean: - Mapping filter: 'requestContextFilter' to: [/*]
2019-03-31 23:53:57.303 INFO  [main] o.s.b.w.s.ServletRegistrationBean: - Servlet dispatcherServlet mapped to [/]
2019-03-31 23:53:58.453 INFO  [main] s.d.s.w.PropertySourcedRequestMappingHandlerMapping: - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-31 23:53:58.524 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 23:53:58.527 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 23:53:58.533 WARN  [main] c.n.c.sources.URLConfigurationSource: - No URLs will be polled as dynamic configuration sources.
2019-03-31 23:53:58.538 INFO  [main] c.n.c.sources.URLConfigurationSource: - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-03-31 23:53:59.030 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor: - Initializing ExecutorService 'applicationTaskExecutor'
2019-03-31 23:54:01.336 INFO  [main] o.s.c.n.eureka.InstanceInfoFactory: - Setting initial instance status as: STARTING
2019-03-31 23:54:01.378 INFO  [main] c.netflix.discovery.DiscoveryClient: - Initializing Eureka in region us-east-1
2019-03-31 23:54:01.560 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON encoding codec LegacyJacksonJson
2019-03-31 23:54:01.561 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using JSON decoding codec LegacyJacksonJson
2019-03-31 23:54:01.698 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML encoding codec XStreamXml
2019-03-31 23:54:01.699 INFO  [main] c.n.d.p.DiscoveryJerseyProvider: - Using XML decoding codec XStreamXml
2019-03-31 23:54:01.974 INFO  [main] c.n.d.s.r.aws.ConfigClusterResolver: - Resolving eureka endpoints via configuration
2019-03-31 23:54:02.401 INFO  [main] c.netflix.discovery.DiscoveryClient: - Disable delta property : false
2019-03-31 23:54:02.402 INFO  [main] c.netflix.discovery.DiscoveryClient: - Single vip registry refresh property : null
2019-03-31 23:54:02.402 INFO  [main] c.netflix.discovery.DiscoveryClient: - Force full registry fetch : false
2019-03-31 23:54:02.405 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application is null : false
2019-03-31 23:54:02.405 INFO  [main] c.netflix.discovery.DiscoveryClient: - Registered Applications size is zero : true
2019-03-31 23:54:02.408 INFO  [main] c.netflix.discovery.DiscoveryClient: - Application version is -1: true
2019-03-31 23:54:02.408 INFO  [main] c.netflix.discovery.DiscoveryClient: - Getting all instance registry info from the eureka server
2019-03-31 23:54:02.745 INFO  [main] c.netflix.discovery.DiscoveryClient: - The response status is 200
2019-03-31 23:54:02.748 INFO  [main] c.netflix.discovery.DiscoveryClient: - Starting heartbeat executor: renew interval is: 30
2019-03-31 23:54:02.754 INFO  [main] c.n.discovery.InstanceInfoReplicator: - InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-03-31 23:54:02.758 INFO  [main] c.netflix.discovery.DiscoveryClient: - Discovery Client initialized at timestamp 1554047642757 with initial instances count: 2
2019-03-31 23:54:02.767 INFO  [main] o.s.c.n.e.s.EurekaServiceRegistry: - Registering application deepexi-service-b-provider with eureka with status UP
2019-03-31 23:54:02.768 INFO  [main] c.netflix.discovery.DiscoveryClient: - Saw local status change event StatusChangeEvent [timestamp=1554047642768, current=UP, previous=STARTING]
2019-03-31 23:54:02.771 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080: registering service...
2019-03-31 23:54:02.779 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Context refreshed
2019-03-31 23:54:02.794 INFO  [main] s.d.s.w.p.DocumentationPluginsBootstrapper: - Found 1 custom documentation plugin(s)
2019-03-31 23:54:02.826 INFO  [nfoReplicator-0] c.netflix.discovery.DiscoveryClient: - DiscoveryClient_DEEPEXI-SERVICE-B-PROVIDER/DESKTOP-MBIC44C:deepexi-service-b-provider:8080 - registration status: 204
2019-03-31 23:54:02.854 INFO  [main] s.d.s.w.s.ApiListingReferenceScanner: - Scanning for api listing references
2019-03-31 23:54:03.076 INFO  [main] o.s.b.w.e.tomcat.TomcatWebServer: - Tomcat started on port(s): 8080 (http) with context path ''
2019-03-31 23:54:03.081 INFO  [main] com.deepexi.b.ConsumerApplication: - Started ConsumerApplication in 11.34 seconds (JVM running for 14.852)
2019-03-31 23:54:20.604 INFO  [nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]: - Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-03-31 23:54:20.606 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Initializing Servlet 'dispatcherServlet'
2019-03-31 23:54:20.647 INFO  [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet: - Completed initialization in 41 ms
2019-03-31 23:54:20.975 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() start =====,参数:
["13",{"createdAt":1553097600000,"createdBy":"","dr":0,"id":"","name":"香蕉","price":5,"tenantId":"","updatedAt":1553097600000,"updatedBy":""}]
2019-03-31 23:54:21.277 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:54:21.292 INFO  [nio-8080-exec-2] c.n.u.c.ShutdownEnabledTimer: - Shutdown hook installed for: NFLoadBalancer-PingTimer-deepexi-service-a-provider
2019-03-31 23:54:21.297 INFO  [nio-8080-exec-2] c.n.loadbalancer.BaseLoadBalancer: - Client: deepexi-service-a-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-03-31 23:54:21.305 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - Using serverListUpdater PollingServerListUpdater
2019-03-31 23:54:21.336 INFO  [nio-8080-exec-2] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:54:21.345 INFO  [nio-8080-exec-2] c.n.l.DynamicServerListLoadBalancer: - DynamicServerListLoadBalancer for client deepexi-service-a-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=deepexi-service-a-provider,current list of Servers=[DESKTOP-MBIC44C:8088],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:DESKTOP-MBIC44C:8088;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@a6b7750
2019-03-31 23:54:21.686 INFO  [nio-8080-exec-2] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() end =====,响应时间:653毫秒,响应内容:
{"code":"0","msg":"ok","payload":1}
2019-03-31 23:54:22.309 INFO  [erListUpdater-0] c.n.config.ChainedDynamicProperty: - Flipping property: deepexi-service-a-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-03-31 23:54:51.397 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() start =====,参数:
["13",{"createdAt":1553097600000,"createdBy":"","dr":0,"name":"香蕉","price":5,"tenantId":"","updatedAt":1553097600000,"updatedBy":""}]
2019-03-31 23:54:51.495 INFO  [nio-8080-exec-3] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() end =====,响应时间:93毫秒,响应内容:
{"code":"0","msg":"ok","payload":1}
2019-03-31 23:54:56.462 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() start =====,参数:
["13",{"createdAt":1553097600000,"createdBy":"","dr":0,"name":"香蕉","price":50,"tenantId":"","updatedAt":1553097600000,"updatedBy":""}]
2019-03-31 23:54:56.592 INFO  [nio-8080-exec-4] com.deepexi.b.aop.LogAspect: - 日志统一打印 ===== com.deepexi.b.controller.ProductController.updateProductById() end =====,响应时间:100毫秒,响应内容:
{"code":"0","msg":"ok","payload":1}
